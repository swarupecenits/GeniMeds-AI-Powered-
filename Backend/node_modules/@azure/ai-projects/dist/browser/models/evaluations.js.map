{"version":3,"file":"evaluations.js","sourceRoot":"","sources":["../../../src/models/evaluations.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC;;;GAGG;AACH,MAAM,CAAC,MAAM,YAAY,GAAG;IAC1B,wCAAwC;IACxC,SAAS,EAAE,yCAAyC;IAEpD,yDAAyD;IACzD,eAAe,EAAE,+CAA+C;IAEhE,8CAA8C;IAC9C,QAAQ,EAAE,wCAAwC;IAElD,2CAA2C;IAC3C,YAAY,EAAE,4CAA4C;IAE1D,oDAAoD;IACpD,gBAAgB,EAAE,gDAAgD;IAElE,2CAA2C;IAC3C,UAAU,EAAE,0CAA0C;IAEtD,mDAAmD;IACnD,kBAAkB,EAAE,kDAAkD;IAEtE,6CAA6C;IAC7C,SAAS,EAAE,yCAAyC;IAEpD,4CAA4C;IAC5C,cAAc,EAAE,8CAA8C;IAE9D,yCAAyC;IACzC,QAAQ,EAAE,wCAAwC;IAElD,2CAA2C;IAC3C,OAAO,EAAE,uCAAuC;IAEhD,2CAA2C;IAC3C,UAAU,EAAE,0CAA0C;IAEtD,+CAA+C;IAC/C,eAAe,EAAE,+CAA+C;IAEhE,wGAAwG;IAExG,6CAA6C;IAC7C,YAAY,EAAE,4CAA4C;IAE1D,iDAAiD;IACjD,kBAAkB,EAAE,kDAAkD;IAEtE,gDAAgD;IAChD,SAAS,EAAE,yCAAyC;IAEpD,4CAA4C;IAC5C,WAAW,EAAE,2CAA2C;IAExD,gDAAgD;IAChD,SAAS,EAAE,yCAAyC;IAEpD,6CAA6C;IAC7C,MAAM,EAAE,sCAAsC;IAE9C,iDAAiD;IACjD,gBAAgB,EAAE,gDAAgD;IAElE,kGAAkG;IAClG,0GAA0G;IAE1G,oDAAoD;IACpD,qBAAqB,EAAE,qDAAqD;IAE5E,oDAAoD;IACpD,qBAAqB,EAAE,qDAAqD;CACpE,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Identifiers for built-in evaluators available in the AI Projects service.\n * These evaluators can be referenced by their URI values.\n */\nexport const EvaluatorIds = {\n  /** Evaluator for assessing relevance */\n  RELEVANCE: \"azureai://built-in/evaluators/relevance\",\n\n  /** Evaluator for detecting hate speech and unfairness */\n  HATE_UNFAIRNESS: \"azureai://built-in/evaluators/hate_unfairness\",\n\n  /** Evaluator for detecting violent content */\n  VIOLENCE: \"azureai://built-in/evaluators/violence\",\n\n  /** Evaluator for assessing groundedness */\n  GROUNDEDNESS: \"azureai://built-in/evaluators/groundedness\",\n\n  /** Advanced evaluator for assessing groundedness */\n  GROUNDEDNESS_PRO: \"azureai://built-in/evaluators/groundedness_pro\",\n\n  /** Evaluator for calculating BLUE score */\n  BLUE_SCORE: \"azureai://built-in/evaluators/blue_score\",\n\n  /** Evaluator for detecting code vulnerabilities */\n  CODE_VULNERABILITY: \"azureai://built-in/evaluators/code_vulnerability\",\n\n  /** Evaluator for assessing text coherence */\n  COHERENCE: \"azureai://built-in/evaluators/coherence\",\n\n  /** Evaluator for content safety analysis */\n  CONTENT_SAFETY: \"azureai://built-in/evaluators/content_safety\",\n\n  /** Evaluator for calculating F1 score */\n  F1_SCORE: \"azureai://built-in/evaluators/f1_score\",\n\n  /** Evaluator for assessing text fluency */\n  FLUENCY: \"azureai://built-in/evaluators/fluency\",\n\n  /** Evaluator for calculating GLEU score */\n  GLEU_SCORE: \"azureai://built-in/evaluators/gleu_score\",\n\n  /** Evaluator for detecting indirect attacks */\n  INDIRECT_ATTACK: \"azureai://built-in/evaluators/indirect_attack\",\n\n  // INTENT_RESOLUTION: \"azureai://built-in/evaluators/intent_resolution\", // Commented out as in original\n\n  /** Evaluator for calculating METEOR score */\n  METEOR_SCORE: \"azureai://built-in/evaluators/meteor_score\",\n\n  /** Evaluator for detecting protected material */\n  PROTECTED_MATERIAL: \"azureai://built-in/evaluators/protected_material\",\n\n  /** Evaluator for assessing retrieval quality */\n  RETRIEVAL: \"azureai://built-in/evaluators/retrieval\",\n\n  /** Evaluator for calculating ROUGE score */\n  ROUGE_SCORE: \"azureai://built-in/evaluators/rouge_score\",\n\n  /** Evaluator for detecting self-harm content */\n  SELF_HARM: \"azureai://built-in/evaluators/self_harm\",\n\n  /** Evaluator for detecting sexual content */\n  SEXUAL: \"azureai://built-in/evaluators/sexual\",\n\n  /** Evaluator for calculating similarity score */\n  SIMILARITY_SCORE: \"azureai://built-in/evaluators/similarity_score\",\n\n  // TASK_ADHERENCE: \"azureai://built-in/evaluators/task_adherence\", // Commented out as in original\n  // TOOL_CALL_ACCURACY: \"azureai://built-in/evaluators/tool_call_accuracy\", // Commented out as in original\n\n  /** Evaluator for detecting ungrounded attributes */\n  UNGROUNDED_ATTRIBUTES: \"azureai://built-in/evaluators/ungrounded_attributes\",\n\n  /** Evaluator for assessing response completeness */\n  RESPONSE_COMPLETENESS: \"azureai://built-in/evaluators/response_completeness\",\n} as const;\n\n/**\n * Type for EvaluatorIds values\n */\nexport type EvaluatorId = (typeof EvaluatorIds)[keyof typeof EvaluatorIds];\n"]}