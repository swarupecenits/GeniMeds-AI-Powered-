import { AIProjectContext as Client } from "../index.js";
import { RedTeam, _PagedRedTeam } from "../../models/models.js";
import { RedTeamsCreateOptionalParams, RedTeamsListOptionalParams, RedTeamsGetOptionalParams } from "./options.js";
import { PagedAsyncIterableIterator } from "../../static-helpers/pagingHelpers.js";
import { StreamableMethod, PathUncheckedResponse } from "@azure-rest/core-client";
export declare function _createSend(context: Client, redTeam: RedTeam, options?: RedTeamsCreateOptionalParams): StreamableMethod;
export declare function _createDeserialize(result: PathUncheckedResponse): Promise<RedTeam>;
/** Creates a redteam run. */
export declare function create(context: Client, redTeam: RedTeam, options?: RedTeamsCreateOptionalParams): Promise<RedTeam>;
export declare function _listSend(context: Client, options?: RedTeamsListOptionalParams): StreamableMethod;
export declare function _listDeserialize(result: PathUncheckedResponse): Promise<_PagedRedTeam>;
/** List a redteam by name. */
export declare function list(context: Client, options?: RedTeamsListOptionalParams): PagedAsyncIterableIterator<RedTeam>;
export declare function _getSend(context: Client, name: string, options?: RedTeamsGetOptionalParams): StreamableMethod;
export declare function _getDeserialize(result: PathUncheckedResponse): Promise<RedTeam>;
/** Get a redteam by name. */
export declare function get(context: Client, name: string, options?: RedTeamsGetOptionalParams): Promise<RedTeam>;
//# sourceMappingURL=operations.d.ts.map