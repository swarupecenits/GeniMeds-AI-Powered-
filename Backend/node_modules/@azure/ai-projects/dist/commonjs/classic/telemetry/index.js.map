{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/classic/telemetry/index.ts"],"names":[],"mappings":";;;AAqBA,0DAEC;AAvBD,uCAAuC;AACvC,kCAAkC;AAClC,qEAA8E;AAG9E,6EAAyE;AAAhE,qHAAA,eAAe,OAAA;AAUxB,SAAS,aAAa,CAAC,WAAkC;IACvD,MAAM,mBAAmB,GAAG,IAAA,yCAAyB,EAAC,WAAW,CAAC,CAAC;IACnE,OAAO;QACL,mBAAmB,EAAE,GAAG,EAAE,CAAC,mBAAmB,CAAC,mBAAmB,EAAE;KACrE,CAAC;AACJ,CAAC;AACD,SAAgB,uBAAuB,CAAC,WAAkC;IACxE,OAAO,aAAa,CAAC,WAAW,CAAC,CAAC;AACpC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createTelemetryOperations } from \"../../api/telemetry/operations.js\";\nimport type { ConnectionsOperations } from \"../connections/index.js\";\n\nexport { enableTelemetry } from \"../../api/inference/enableTelemetry.js\";\n/** The type of enableTelemetry method */\nexport type EnableTelemetryType = (destination?: string) => void;\n\n/** Interface representing telemetry operations */\nexport interface TelemetryOperations {\n  /** Get appInsight connection string */\n  getConnectionString: () => Promise<string>;\n}\n\nfunction _getTelemetry(connections: ConnectionsOperations): TelemetryOperations {\n  const telemetryOperations = createTelemetryOperations(connections);\n  return {\n    getConnectionString: () => telemetryOperations.getConnectionString(),\n  };\n}\nexport function _getTelemetryOperations(connections: ConnectionsOperations): TelemetryOperations {\n  return _getTelemetry(connections);\n}\n"]}