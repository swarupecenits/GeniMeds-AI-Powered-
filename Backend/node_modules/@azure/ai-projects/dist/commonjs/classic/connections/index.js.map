{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/classic/connections/index.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC;;AA2ClC,8DAIC;AAtCD,uEAAgG;AAsBhG,SAAS,eAAe,CAAC,OAAyB;IAChD,OAAO;QACL,IAAI,EAAE,CAAC,OAAuC,EAAE,EAAE,CAAC,IAAA,oBAAI,EAAC,OAAO,EAAE,OAAO,CAAC;QACzE,kBAAkB,EAAE,CAAC,IAAY,EAAE,OAAqD,EAAE,EAAE,CAC1F,IAAA,kCAAkB,EAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC;QAC5C,GAAG,EAAE,CAAC,IAAY,EAAE,kBAA4B,EAAE,OAAsC,EAAE,EAAE,CAC1F,IAAA,mBAAG,EAAC,OAAO,EAAE,IAAI,EAAE,kBAAkB,EAAE,OAAO,CAAC;QACjD,UAAU,EAAE,CAAC,cAA8B,EAAE,kBAA4B,EAAE,EAAE,CAC3E,IAAA,0BAAU,EAAC,OAAO,EAAE,cAAc,EAAE,kBAAkB,CAAC;KAC1D,CAAC;AACJ,CAAC;AAED,SAAgB,yBAAyB,CAAC,OAAyB;IACjE,yBACK,eAAe,CAAC,OAAO,CAAC,EAC3B;AACJ,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { AIProjectContext } from \"../../api/aiProjectContext.js\";\nimport { Connection, ConnectionType } from \"../../models/models.js\";\nimport {\n  ConnectionsListOptionalParams,\n  ConnectionsGetWithCredentialsOptionalParams,\n  ConnectionsGetOptionalParams,\n} from \"../../api/connections/options.js\";\nimport { list, getWithCredentials, get, getDefault } from \"../../api/connections/operations.js\";\nimport { PagedAsyncIterableIterator } from \"../../static-helpers/pagingHelpers.js\";\n\n/** Interface representing a Connections operations. */\nexport interface ConnectionsOperations {\n  /** List all connections in the project, without populating connection credentials */\n  list: (options?: ConnectionsListOptionalParams) => PagedAsyncIterableIterator<Connection>;\n  /** Get a connection by name, with its connection credentials */\n  getWithCredentials: (\n    name: string,\n    options?: ConnectionsGetWithCredentialsOptionalParams,\n  ) => Promise<Connection>;\n  /** Get a connection by name, without populating connection credentials */\n  get: (\n    name: string,\n    includeCredentials?: boolean,\n    options?: ConnectionsGetOptionalParams,\n  ) => Promise<Connection>;\n  /** Get the default connection for the project */\n  getDefault: (connectionType: ConnectionType, includeCredentials?: boolean) => Promise<Connection>;\n}\n\nfunction _getConnections(context: AIProjectContext) {\n  return {\n    list: (options?: ConnectionsListOptionalParams) => list(context, options),\n    getWithCredentials: (name: string, options?: ConnectionsGetWithCredentialsOptionalParams) =>\n      getWithCredentials(context, name, options),\n    get: (name: string, includeCredentials?: boolean, options?: ConnectionsGetOptionalParams) =>\n      get(context, name, includeCredentials, options),\n    getDefault: (connectionType: ConnectionType, includeCredentials?: boolean) =>\n      getDefault(context, connectionType, includeCredentials),\n  };\n}\n\nexport function _getConnectionsOperations(context: AIProjectContext): ConnectionsOperations {\n  return {\n    ..._getConnections(context),\n  };\n}\n"]}