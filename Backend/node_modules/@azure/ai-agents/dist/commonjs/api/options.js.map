{"version":3,"file":"options.js","sourceRoot":"","sources":["../../../src/api/options.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport {\n  ToolDefinitionUnion,\n  ToolResources,\n  AgentsResponseFormatOption,\n  AgentThreadCreationOptions,\n  UpdateToolResourcesOptions,\n  TruncationObject,\n  AgentsToolChoiceOption,\n  ListSortOrder,\n} from \"../models/models.js\";\nimport { OperationOptions } from \"@azure-rest/core-client\";\n\n/** Optional parameters. */\nexport interface CreateThreadAndRunOptionalParams extends OperationOptions {\n  /** The details used to create the new thread. If no thread is provided, an empty one will be created. */\n  thread?: AgentThreadCreationOptions;\n  /** The overridden model that the agent should use to run the thread. */\n  model?: string | null;\n  /** The overridden system instructions the agent should use to run the thread. */\n  instructions?: string | null;\n  /** The overridden list of enabled tools the agent should use to run the thread. */\n  tools?: ToolDefinitionUnion[] | null;\n  /** Override the tools the agent can use for this run. This is useful for modifying the behavior on a per-run basis */\n  toolResources?: UpdateToolResourcesOptions | null;\n  /**\n   * If `true`, returns a stream of events that happen during the Run as server-sent events,\n   * terminating when the Run enters a terminal state with a `data: [DONE]` message.\n   */\n  stream?: boolean;\n  /**\n   * What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output\n   * more random, while lower values like 0.2 will make it more focused and deterministic.\n   */\n  temperature?: number | null;\n  /**\n   * An alternative to sampling with temperature, called nucleus sampling, where the model\n   * considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens\n   * comprising the top 10% probability mass are considered.\n   *\n   * We generally recommend altering this or temperature but not both.\n   */\n  topP?: number | null;\n  /**\n   * The maximum number of prompt tokens that may be used over the course of the run. The run will make a best effort to use only\n   * the number of prompt tokens specified, across multiple turns of the run. If the run exceeds the number of prompt tokens specified,\n   * the run will end with status `incomplete`. See `incomplete_details` for more info.\n   */\n  maxPromptTokens?: number | null;\n  /**\n   * The maximum number of completion tokens that may be used over the course of the run. The run will make a best effort to use only\n   * the number of completion tokens specified, across multiple turns of the run. If the run exceeds the number of completion tokens\n   * specified, the run will end with status `incomplete`. See `incomplete_details` for more info.\n   */\n  maxCompletionTokens?: number | null;\n  /** The strategy to use for dropping messages as the context windows moves forward. */\n  truncationStrategy?: TruncationObject | null;\n  /** Controls whether or not and which tool is called by the model. */\n  toolChoice?: AgentsToolChoiceOption | null;\n  /** Specifies the format that the model must output. */\n  responseFormat?: AgentsResponseFormatOption | null;\n  /** If `true` functions will run in parallel during tool use. */\n  parallelToolCalls?: boolean;\n  /** A set of up to 16 key/value pairs that can be attached to an object, used for storing additional information about that object in a structured format. Keys may be up to 64 characters in length and values may be up to 512 characters in length. */\n  metadata?: Record<string, string> | null;\n}\n\n/** Optional parameters. */\nexport interface DeleteAgentOptionalParams extends OperationOptions {}\n\n/** Optional parameters. */\nexport interface UpdateAgentOptionalParams extends OperationOptions {\n  /** The ID of the model to use. */\n  model?: string;\n  /** The modified name for the agent to use. */\n  name?: string | null;\n  /** The modified description for the agent to use. */\n  description?: string | null;\n  /** The modified system instructions for the new agent to use. */\n  instructions?: string | null;\n  /** The modified collection of tools to enable for the agent. */\n  tools?: ToolDefinitionUnion[];\n  /**\n   * A set of resources that are used by the agent's tools. The resources are specific to the type of tool. For example,\n   * the `code_interpreter` tool requires a list of file IDs, while the `file_search` tool requires a list of vector store IDs.\n   */\n  toolResources?: ToolResources;\n  /**\n   * What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random,\n   * while lower values like 0.2 will make it more focused and deterministic.\n   */\n  temperature?: number | null;\n  /**\n   * An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass.\n   * So 0.1 means only the tokens comprising the top 10% probability mass are considered.\n   *\n   * We generally recommend altering this or temperature but not both.\n   */\n  topP?: number | null;\n  /** The response format of the tool calls used by this agent. */\n  responseFormat?: AgentsResponseFormatOption | null;\n  /** A set of up to 16 key/value pairs that can be attached to an object, used for storing additional information about that object in a structured format. Keys may be up to 64 characters in length and values may be up to 512 characters in length. */\n  metadata?: Record<string, string> | null;\n}\n\n/** Optional parameters. */\nexport interface GetAgentOptionalParams extends OperationOptions {}\n\n/** Optional parameters. */\nexport interface ListAgentsOptionalParams extends OperationOptions {\n  /** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. */\n  limit?: number;\n  /** Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order. */\n  order?: ListSortOrder;\n  /** A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list. */\n  after?: string;\n  /** A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list. */\n  before?: string;\n}\n\n/** Optional parameters. */\nexport interface CreateAgentOptionalParams extends OperationOptions {\n  /** The name of the new agent. */\n  name?: string | null;\n  /** The description of the new agent. */\n  description?: string | null;\n  /** The system instructions for the new agent to use. */\n  instructions?: string | null;\n  /** The collection of tools to enable for the new agent. */\n  tools?: ToolDefinitionUnion[];\n  /**\n   * A set of resources that are used by the agent's tools. The resources are specific to the type of tool. For example, the `code_interpreter`\n   * tool requires a list of file IDs, while the `file_search` tool requires a list of vector store IDs.\n   */\n  toolResources?: ToolResources | null;\n  /**\n   * What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random,\n   * while lower values like 0.2 will make it more focused and deterministic.\n   */\n  temperature?: number | null;\n  /**\n   * An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass.\n   * So 0.1 means only the tokens comprising the top 10% probability mass are considered.\n   *\n   * We generally recommend altering this or temperature but not both.\n   */\n  topP?: number | null;\n  /** The response format of the tool calls used by this agent. */\n  responseFormat?: AgentsResponseFormatOption | null;\n  /** A set of up to 16 key/value pairs that can be attached to an object, used for storing additional information about that object in a structured format. Keys may be up to 64 characters in length and values may be up to 512 characters in length. */\n  metadata?: Record<string, string> | null;\n}\n\n/**\n * Optional parameters configuring polling behavior.\n */\nexport interface PollingOptionsParams {\n  /** Options for configuring polling behavior. */\n  pollingOptions?: PollingOptions;\n}\n/**\n * Options for configuring polling behavior.\n */\nexport interface PollingOptions {\n  /**\n   * The interval, in milliseconds, to wait between polling attempts. If not specified, a default interval of 1000ms will be used.\n   */\n  intervalInMs?: number;\n  /**\n   * A serialized poller which can be used to resume an existing paused Long-Running-Operation.\n   */\n  restoreFrom?: string;\n}\n"]}