{"version":3,"file":"options.js","sourceRoot":"","sources":["../../../../src/api/vectorStores/options.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport {\n  VectorStoreConfiguration,\n  VectorStoreExpirationPolicy,\n  VectorStoreChunkingStrategyRequestUnion,\n  ListSortOrder,\n} from \"../../models/models.js\";\nimport { OperationOptions } from \"@azure-rest/core-client\";\nimport { PollingOptionsParams } from \"../options.js\";\n\n/** Optional parameters. */\nexport interface VectorStoresDeleteVectorStoreOptionalParams extends OperationOptions {}\n\n/** Optional parameters. */\nexport interface VectorStoresModifyVectorStoreOptionalParams extends OperationOptions {\n  /** The name of the vector store. */\n  name?: string | null;\n  /** Details on when this vector store expires */\n  expiresAfter?: VectorStoreExpirationPolicy | null;\n  /** A set of up to 16 key/value pairs that can be attached to an object, used for storing additional information about that object in a structured format. Keys may be up to 64 characters in length and values may be up to 512 characters in length. */\n  metadata?: Record<string, string> | null;\n}\n\n/** Optional parameters. */\nexport interface VectorStoresGetVectorStoreOptionalParams extends OperationOptions {}\n\n/** Optional parameters. */\nexport interface VectorStoresCreateVectorStoreOptionalParams\n  extends OperationOptions,\n    PollingOptionsParams {\n  /** A list of file IDs that the vector store should use. Useful for tools like `file_search` that can access files. */\n  fileIds?: string[];\n  /** The name of the vector store. */\n  name?: string;\n  /** The vector store configuration, used when vector store is created from Azure asset URIs. */\n  storeConfiguration?: VectorStoreConfiguration;\n  /** Details on when this vector store expires */\n  expiresAfter?: VectorStoreExpirationPolicy;\n  /** The chunking strategy used to chunk the file(s). If not set, will use the auto strategy. Only applicable if file_ids is non-empty. */\n  chunkingStrategy?: VectorStoreChunkingStrategyRequestUnion;\n  /** A set of up to 16 key/value pairs that can be attached to an object, used for storing additional information about that object in a structured format. Keys may be up to 64 characters in length and values may be up to 512 characters in length. */\n  metadata?: Record<string, string> | null;\n}\n\n/** Optional parameters. */\nexport interface VectorStoresListVectorStoresOptionalParams extends OperationOptions {\n  /** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. */\n  limit?: number;\n  /** Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order. */\n  order?: ListSortOrder;\n  /** A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list. */\n  after?: string;\n  /** A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list. */\n  before?: string;\n}\n"]}