import { AgentsContext } from "../../api/agentsContext.js";
import { FileListResponse, FileInfo, FilePurpose, FileDeletionStatus } from "../../models/models.js";
import { FilesGetFileContentOptionalParams, FilesGetFileOptionalParams, FilesDeleteFileOptionalParams, FilesUploadFileOptionalParams, FilesListFilesOptionalParams } from "../../api/files/options.js";
import { OperationState, PollerLike } from "@azure/core-lro";
import { StreamableMethod } from "@azure-rest/core-client";
/** Interface representing a Files operations. */
export interface FilesOperations {
    /** Retrieves the raw content of a specific file. */
    getContent: (fileId: string, options?: FilesGetFileContentOptionalParams) => StreamableMethod<string | Uint8Array>;
    /** Returns information about a specific file. Does not retrieve file content. */
    get: (fileId: string, options?: FilesGetFileOptionalParams) => Promise<FileInfo>;
    /** Delete a previously uploaded file. */
    delete: (fileId: string, options?: FilesDeleteFileOptionalParams) => Promise<FileDeletionStatus>;
    /** Uploads a file for use by other operations. */
    upload: (file: ReadableStream<Uint8Array> | NodeJS.ReadableStream, purpose: FilePurpose, options: FilesUploadFileOptionalParams) => Promise<FileInfo>;
    /** Uploads a file for use by other operations with polling */
    uploadAndPoll: (file: ReadableStream<Uint8Array> | NodeJS.ReadableStream, purpose: FilePurpose, options: FilesUploadFileOptionalParams) => PollerLike<OperationState<FileInfo>, FileInfo>;
    /** Gets a list of previously uploaded files. */
    list: (options?: FilesListFilesOptionalParams) => Promise<FileListResponse>;
}
export declare function _getFilesOperations(context: AgentsContext): FilesOperations;
//# sourceMappingURL=index.d.ts.map