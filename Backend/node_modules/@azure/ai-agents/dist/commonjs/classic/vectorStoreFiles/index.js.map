{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/classic/vectorStoreFiles/index.ts"],"names":[],"mappings":";;AA4EA,wEAIC;AAtED,4EAMkD;AAmClD,SAAS,oBAAoB,CAAC,OAAsB;IAClD,OAAO;QACL,MAAM,EAAE,CACN,aAAqB,EACrB,MAAc,EACd,OAA6D,EAC7D,EAAE,CAAC,IAAA,qCAAqB,EAAC,OAAO,EAAE,aAAa,EAAE,MAAM,EAAE,OAAO,CAAC;QACnE,GAAG,EAAE,CACH,aAAqB,EACrB,MAAc,EACd,OAA0D,EAC1D,EAAE,CAAC,IAAA,kCAAkB,EAAC,OAAO,EAAE,aAAa,EAAE,MAAM,EAAE,OAAO,CAAC;QAChE,MAAM,EAAE,CACN,aAAqB,EACrB,OAA6D,EAC7D,EAAE,CAAC,IAAA,qCAAqB,EAAC,OAAO,EAAE,aAAa,EAAE,OAAO,CAAC;QAC3D,aAAa,EAAE,CACb,aAAqB,EACrB,OAA6D,EAC7D,EAAE,CAAC,IAAA,4CAA4B,EAAC,OAAO,EAAE,aAAa,EAAE,OAAO,CAAC;QAClE,IAAI,EAAE,CAAC,aAAqB,EAAE,OAA4D,EAAE,EAAE,CAC5F,IAAA,oCAAoB,EAAC,OAAO,EAAE,aAAa,EAAE,OAAO,CAAC;KACxD,CAAC;AACJ,CAAC;AAED,SAAgB,8BAA8B,CAAC,OAAsB;IACnE,yBACK,oBAAoB,CAAC,OAAO,CAAC,EAChC;AACJ,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { AgentsContext } from \"../../api/agentsContext.js\";\nimport { VectorStoreFile, VectorStoreFileDeletionStatus } from \"../../models/models.js\";\nimport {\n  VectorStoreFilesDeleteVectorStoreFileOptionalParams,\n  VectorStoreFilesGetVectorStoreFileOptionalParams,\n  VectorStoreFilesCreateVectorStoreFileOptionalParams,\n  VectorStoreFilesListVectorStoreFilesOptionalParams,\n} from \"../../api/vectorStoreFiles/options.js\";\nimport {\n  deleteVectorStoreFile,\n  getVectorStoreFile,\n  createVectorStoreFile,\n  listVectorStoreFiles,\n  createVectorStoreFileAndPoll,\n} from \"../../api/vectorStoreFiles/operations.js\";\nimport { OperationState, PollerLike } from \"@azure/core-lro\";\nimport { PagedAsyncIterableIterator } from \"../../static-helpers/pagingHelpers.js\";\n\n/** Interface representing a VectorStoreFiles operations. */\nexport interface VectorStoreFilesOperations {\n  /** Deletes a vector store file. This removes the file‐to‐store link (does not delete the file itself). */\n  delete: (\n    vectorStoreId: string,\n    fileId: string,\n    options?: VectorStoreFilesDeleteVectorStoreFileOptionalParams,\n  ) => Promise<VectorStoreFileDeletionStatus>;\n  /** Retrieves a vector store file. */\n  get: (\n    vectorStoreId: string,\n    fileId: string,\n    options?: VectorStoreFilesGetVectorStoreFileOptionalParams,\n  ) => Promise<VectorStoreFile>;\n  /** Create a vector store file by attaching a file to a vector store. */\n  create: (\n    vectorStoreId: string,\n    options?: VectorStoreFilesCreateVectorStoreFileOptionalParams,\n  ) => Promise<VectorStoreFile>;\n  /** Create a vector store file by attaching a file to a vector store and poll. */\n  createAndPoll: (\n    vectorStoreId: string,\n    options?: VectorStoreFilesCreateVectorStoreFileOptionalParams,\n  ) => PollerLike<OperationState<VectorStoreFile>, VectorStoreFile>;\n  /** Returns a list of vector store files. */\n  list: (\n    vectorStoreId: string,\n    options?: VectorStoreFilesListVectorStoreFilesOptionalParams,\n  ) => PagedAsyncIterableIterator<VectorStoreFile>;\n}\n\nfunction _getVectorStoreFiles(context: AgentsContext) {\n  return {\n    delete: (\n      vectorStoreId: string,\n      fileId: string,\n      options?: VectorStoreFilesDeleteVectorStoreFileOptionalParams,\n    ) => deleteVectorStoreFile(context, vectorStoreId, fileId, options),\n    get: (\n      vectorStoreId: string,\n      fileId: string,\n      options?: VectorStoreFilesGetVectorStoreFileOptionalParams,\n    ) => getVectorStoreFile(context, vectorStoreId, fileId, options),\n    create: (\n      vectorStoreId: string,\n      options?: VectorStoreFilesCreateVectorStoreFileOptionalParams,\n    ) => createVectorStoreFile(context, vectorStoreId, options),\n    createAndPoll: (\n      vectorStoreId: string,\n      options?: VectorStoreFilesCreateVectorStoreFileOptionalParams,\n    ) => createVectorStoreFileAndPoll(context, vectorStoreId, options),\n    list: (vectorStoreId: string, options?: VectorStoreFilesListVectorStoreFilesOptionalParams) =>\n      listVectorStoreFiles(context, vectorStoreId, options),\n  };\n}\n\nexport function _getVectorStoreFilesOperations(context: AgentsContext): VectorStoreFilesOperations {\n  return {\n    ..._getVectorStoreFiles(context),\n  };\n}\n"]}