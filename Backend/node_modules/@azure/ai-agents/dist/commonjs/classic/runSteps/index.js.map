{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/classic/runSteps/index.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC;;AA0ClC,wDAIC;AAtCD,oEAA4E;AAqB5E,SAAS,YAAY,CAAC,OAAsB;IAC1C,OAAO;QACL,IAAI,EAAE,CAAC,QAAgB,EAAE,KAAa,EAAE,OAA4C,EAAE,EAAE,CACtF,IAAA,4BAAY,EAAC,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,CAAC;QACjD,GAAG,EAAE,CACH,QAAgB,EAChB,KAAa,EACb,MAAc,EACd,OAA0C,EAC1C,EAAE,CAAC,IAAA,0BAAU,EAAC,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,CAAC;KAC3D,CAAC;AACJ,CAAC;AAED,SAAgB,sBAAsB,CAAC,OAAsB;IAC3D,yBACK,YAAY,CAAC,OAAO,CAAC,EACxB;AACJ,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { AgentsContext } from \"../../api/agentsContext.js\";\nimport { RunStep } from \"../../models/models.js\";\nimport {\n  RunStepsListRunStepsOptionalParams,\n  RunStepsGetRunStepOptionalParams,\n} from \"../../api/runSteps/options.js\";\nimport { listRunSteps, getRunStep } from \"../../api/runSteps/operations.js\";\nimport { PagedAsyncIterableIterator } from \"../../static-helpers/pagingHelpers.js\";\n\n/** Interface representing a RunSteps operations. */\n/** Interface representing a RunSteps operations. */\nexport interface RunStepsOperations {\n  /** Gets a list of run steps from a thread run. */\n  list: (\n    threadId: string,\n    runId: string,\n    options?: RunStepsListRunStepsOptionalParams,\n  ) => PagedAsyncIterableIterator<RunStep>;\n  /** Retrieves a single run step from a thread run. */\n  get: (\n    threadId: string,\n    runId: string,\n    stepId: string,\n    options?: RunStepsGetRunStepOptionalParams,\n  ) => Promise<RunStep>;\n}\n\nfunction _getRunSteps(context: AgentsContext) {\n  return {\n    list: (threadId: string, runId: string, options?: RunStepsListRunStepsOptionalParams) =>\n      listRunSteps(context, threadId, runId, options),\n    get: (\n      threadId: string,\n      runId: string,\n      stepId: string,\n      options?: RunStepsGetRunStepOptionalParams,\n    ) => getRunStep(context, threadId, runId, stepId, options),\n  };\n}\n\nexport function _getRunStepsOperations(context: AgentsContext): RunStepsOperations {\n  return {\n    ..._getRunSteps(context),\n  };\n}\n"]}