import { AgentsContext } from "../../api/agentsContext.js";
import { MessageRole, MessageInputContent, ThreadMessage } from "../../models/models.js";
import { MessagesUpdateMessageOptionalParams, MessagesGetMessageOptionalParams, MessagesListMessagesOptionalParams, MessagesCreateMessageOptionalParams } from "../../api/messages/options.js";
import { PagedAsyncIterableIterator } from "../../static-helpers/pagingHelpers.js";
/** Interface representing a Messages operations. */
export interface MessagesOperations {
    /** Modifies an existing message on an existing thread. */
    update: (threadId: string, messageId: string, options?: MessagesUpdateMessageOptionalParams) => Promise<ThreadMessage>;
    /** Retrieves an existing message. */
    get: (threadId: string, messageId: string, options?: MessagesGetMessageOptionalParams) => Promise<ThreadMessage>;
    /** Gets a list of messages that exist on a thread. */
    list: (threadId: string, options?: MessagesListMessagesOptionalParams) => PagedAsyncIterableIterator<ThreadMessage>;
    /** Creates a new message on a specified thread. */
    create: (threadId: string, role: MessageRole, content: MessageInputContent, options?: MessagesCreateMessageOptionalParams) => Promise<ThreadMessage>;
}
export declare function _getMessagesOperations(context: AgentsContext): MessagesOperations;
//# sourceMappingURL=index.d.ts.map