"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
Object.defineProperty(exports, "__esModule", { value: true });
exports.KnownVersions = exports.DoneEvent = exports.ErrorEvent = exports.MessageStreamEvent = exports.RunStepStreamEvent = exports.RunStreamEvent = exports.ThreadStreamEvent = exports.VectorStoreDataSourceAssetType = void 0;
exports.toolDefinitionSerializer = toolDefinitionSerializer;
exports.toolDefinitionDeserializer = toolDefinitionDeserializer;
exports.toolDefinitionUnionSerializer = toolDefinitionUnionSerializer;
exports.toolDefinitionUnionDeserializer = toolDefinitionUnionDeserializer;
exports.codeInterpreterToolDefinitionSerializer = codeInterpreterToolDefinitionSerializer;
exports.codeInterpreterToolDefinitionDeserializer = codeInterpreterToolDefinitionDeserializer;
exports.fileSearchToolDefinitionSerializer = fileSearchToolDefinitionSerializer;
exports.fileSearchToolDefinitionDeserializer = fileSearchToolDefinitionDeserializer;
exports.fileSearchToolDefinitionDetailsSerializer = fileSearchToolDefinitionDetailsSerializer;
exports.fileSearchToolDefinitionDetailsDeserializer = fileSearchToolDefinitionDetailsDeserializer;
exports.fileSearchRankingOptionsSerializer = fileSearchRankingOptionsSerializer;
exports.fileSearchRankingOptionsDeserializer = fileSearchRankingOptionsDeserializer;
exports.functionToolDefinitionSerializer = functionToolDefinitionSerializer;
exports.functionToolDefinitionDeserializer = functionToolDefinitionDeserializer;
exports.functionDefinitionSerializer = functionDefinitionSerializer;
exports.functionDefinitionDeserializer = functionDefinitionDeserializer;
exports.bingGroundingToolDefinitionSerializer = bingGroundingToolDefinitionSerializer;
exports.bingGroundingToolDefinitionDeserializer = bingGroundingToolDefinitionDeserializer;
exports.bingGroundingSearchConfigurationListSerializer = bingGroundingSearchConfigurationListSerializer;
exports.bingGroundingSearchConfigurationListDeserializer = bingGroundingSearchConfigurationListDeserializer;
exports.bingGroundingSearchConfigurationArraySerializer = bingGroundingSearchConfigurationArraySerializer;
exports.bingGroundingSearchConfigurationArrayDeserializer = bingGroundingSearchConfigurationArrayDeserializer;
exports.bingGroundingSearchConfigurationSerializer = bingGroundingSearchConfigurationSerializer;
exports.bingGroundingSearchConfigurationDeserializer = bingGroundingSearchConfigurationDeserializer;
exports.microsoftFabricToolDefinitionSerializer = microsoftFabricToolDefinitionSerializer;
exports.microsoftFabricToolDefinitionDeserializer = microsoftFabricToolDefinitionDeserializer;
exports.toolConnectionListSerializer = toolConnectionListSerializer;
exports.toolConnectionListDeserializer = toolConnectionListDeserializer;
exports.toolConnectionArraySerializer = toolConnectionArraySerializer;
exports.toolConnectionArrayDeserializer = toolConnectionArrayDeserializer;
exports.toolConnectionSerializer = toolConnectionSerializer;
exports.toolConnectionDeserializer = toolConnectionDeserializer;
exports.sharepointToolDefinitionSerializer = sharepointToolDefinitionSerializer;
exports.sharepointToolDefinitionDeserializer = sharepointToolDefinitionDeserializer;
exports.azureAISearchToolDefinitionSerializer = azureAISearchToolDefinitionSerializer;
exports.azureAISearchToolDefinitionDeserializer = azureAISearchToolDefinitionDeserializer;
exports.openApiToolDefinitionSerializer = openApiToolDefinitionSerializer;
exports.openApiToolDefinitionDeserializer = openApiToolDefinitionDeserializer;
exports.openApiFunctionDefinitionSerializer = openApiFunctionDefinitionSerializer;
exports.openApiFunctionDefinitionDeserializer = openApiFunctionDefinitionDeserializer;
exports.openApiAuthDetailsSerializer = openApiAuthDetailsSerializer;
exports.openApiAuthDetailsDeserializer = openApiAuthDetailsDeserializer;
exports.openApiAuthDetailsUnionSerializer = openApiAuthDetailsUnionSerializer;
exports.openApiAuthDetailsUnionDeserializer = openApiAuthDetailsUnionDeserializer;
exports.openApiAnonymousAuthDetailsSerializer = openApiAnonymousAuthDetailsSerializer;
exports.openApiAnonymousAuthDetailsDeserializer = openApiAnonymousAuthDetailsDeserializer;
exports.openApiConnectionAuthDetailsSerializer = openApiConnectionAuthDetailsSerializer;
exports.openApiConnectionAuthDetailsDeserializer = openApiConnectionAuthDetailsDeserializer;
exports.openApiConnectionSecuritySchemeSerializer = openApiConnectionSecuritySchemeSerializer;
exports.openApiConnectionSecuritySchemeDeserializer = openApiConnectionSecuritySchemeDeserializer;
exports.openApiManagedAuthDetailsSerializer = openApiManagedAuthDetailsSerializer;
exports.openApiManagedAuthDetailsDeserializer = openApiManagedAuthDetailsDeserializer;
exports.openApiManagedSecuritySchemeSerializer = openApiManagedSecuritySchemeSerializer;
exports.openApiManagedSecuritySchemeDeserializer = openApiManagedSecuritySchemeDeserializer;
exports.bingCustomSearchToolDefinitionSerializer = bingCustomSearchToolDefinitionSerializer;
exports.bingCustomSearchToolDefinitionDeserializer = bingCustomSearchToolDefinitionDeserializer;
exports.bingCustomSearchConfigurationListSerializer = bingCustomSearchConfigurationListSerializer;
exports.bingCustomSearchConfigurationListDeserializer = bingCustomSearchConfigurationListDeserializer;
exports.bingCustomSearchConfigurationArraySerializer = bingCustomSearchConfigurationArraySerializer;
exports.bingCustomSearchConfigurationArrayDeserializer = bingCustomSearchConfigurationArrayDeserializer;
exports.bingCustomSearchConfigurationSerializer = bingCustomSearchConfigurationSerializer;
exports.bingCustomSearchConfigurationDeserializer = bingCustomSearchConfigurationDeserializer;
exports.connectedAgentToolDefinitionSerializer = connectedAgentToolDefinitionSerializer;
exports.connectedAgentToolDefinitionDeserializer = connectedAgentToolDefinitionDeserializer;
exports.connectedAgentDetailsSerializer = connectedAgentDetailsSerializer;
exports.connectedAgentDetailsDeserializer = connectedAgentDetailsDeserializer;
exports.azureFunctionToolDefinitionSerializer = azureFunctionToolDefinitionSerializer;
exports.azureFunctionToolDefinitionDeserializer = azureFunctionToolDefinitionDeserializer;
exports.azureFunctionDefinitionSerializer = azureFunctionDefinitionSerializer;
exports.azureFunctionDefinitionDeserializer = azureFunctionDefinitionDeserializer;
exports.azureFunctionBindingSerializer = azureFunctionBindingSerializer;
exports.azureFunctionBindingDeserializer = azureFunctionBindingDeserializer;
exports.azureFunctionStorageQueueSerializer = azureFunctionStorageQueueSerializer;
exports.azureFunctionStorageQueueDeserializer = azureFunctionStorageQueueDeserializer;
exports.toolResourcesSerializer = toolResourcesSerializer;
exports.toolResourcesDeserializer = toolResourcesDeserializer;
exports.codeInterpreterToolResourceSerializer = codeInterpreterToolResourceSerializer;
exports.codeInterpreterToolResourceDeserializer = codeInterpreterToolResourceDeserializer;
exports.vectorStoreDataSourceArraySerializer = vectorStoreDataSourceArraySerializer;
exports.vectorStoreDataSourceArrayDeserializer = vectorStoreDataSourceArrayDeserializer;
exports.vectorStoreDataSourceSerializer = vectorStoreDataSourceSerializer;
exports.vectorStoreDataSourceDeserializer = vectorStoreDataSourceDeserializer;
exports.fileSearchToolResourceSerializer = fileSearchToolResourceSerializer;
exports.fileSearchToolResourceDeserializer = fileSearchToolResourceDeserializer;
exports.vectorStoreConfigurationsArraySerializer = vectorStoreConfigurationsArraySerializer;
exports.vectorStoreConfigurationsArrayDeserializer = vectorStoreConfigurationsArrayDeserializer;
exports.vectorStoreConfigurationsSerializer = vectorStoreConfigurationsSerializer;
exports.vectorStoreConfigurationsDeserializer = vectorStoreConfigurationsDeserializer;
exports.vectorStoreConfigurationSerializer = vectorStoreConfigurationSerializer;
exports.vectorStoreConfigurationDeserializer = vectorStoreConfigurationDeserializer;
exports.azureAISearchResourceSerializer = azureAISearchResourceSerializer;
exports.azureAISearchResourceDeserializer = azureAISearchResourceDeserializer;
exports.aiSearchIndexResourceArraySerializer = aiSearchIndexResourceArraySerializer;
exports.aiSearchIndexResourceArrayDeserializer = aiSearchIndexResourceArrayDeserializer;
exports.aiSearchIndexResourceSerializer = aiSearchIndexResourceSerializer;
exports.aiSearchIndexResourceDeserializer = aiSearchIndexResourceDeserializer;
exports.agentsResponseFormatSerializer = agentsResponseFormatSerializer;
exports.agentsResponseFormatDeserializer = agentsResponseFormatDeserializer;
exports.responseFormatJsonSchemaTypeSerializer = responseFormatJsonSchemaTypeSerializer;
exports.responseFormatJsonSchemaTypeDeserializer = responseFormatJsonSchemaTypeDeserializer;
exports.responseFormatJsonSchemaSerializer = responseFormatJsonSchemaSerializer;
exports.responseFormatJsonSchemaDeserializer = responseFormatJsonSchemaDeserializer;
exports.toolDefinitionUnionArraySerializer = toolDefinitionUnionArraySerializer;
exports.toolDefinitionUnionArrayDeserializer = toolDefinitionUnionArrayDeserializer;
exports.agentsResponseFormatOptionSerializer = agentsResponseFormatOptionSerializer;
exports.agentsResponseFormatOptionDeserializer = agentsResponseFormatOptionDeserializer;
exports.agentDeserializer = agentDeserializer;
exports._agentsPagedResultAgentDeserializer = _agentsPagedResultAgentDeserializer;
exports.agentArrayDeserializer = agentArrayDeserializer;
exports.agentDeletionStatusDeserializer = agentDeletionStatusDeserializer;
exports.agentThreadCreationOptionsSerializer = agentThreadCreationOptionsSerializer;
exports.threadMessageOptionsArraySerializer = threadMessageOptionsArraySerializer;
exports.threadMessageOptionsSerializer = threadMessageOptionsSerializer;
exports.messageInputContentSerializer = messageInputContentSerializer;
exports.messageInputContentBlockUnionArraySerializer = messageInputContentBlockUnionArraySerializer;
exports.messageInputContentBlockSerializer = messageInputContentBlockSerializer;
exports.messageInputContentBlockUnionSerializer = messageInputContentBlockUnionSerializer;
exports.messageInputTextBlockSerializer = messageInputTextBlockSerializer;
exports.messageInputImageFileBlockSerializer = messageInputImageFileBlockSerializer;
exports.messageImageFileParamSerializer = messageImageFileParamSerializer;
exports.messageInputImageUrlBlockSerializer = messageInputImageUrlBlockSerializer;
exports.messageImageUrlParamSerializer = messageImageUrlParamSerializer;
exports.messageAttachmentArraySerializer = messageAttachmentArraySerializer;
exports.messageAttachmentArrayDeserializer = messageAttachmentArrayDeserializer;
exports.messageAttachmentSerializer = messageAttachmentSerializer;
exports.messageAttachmentDeserializer = messageAttachmentDeserializer;
exports.messageAttachmentToolDefinitionArraySerializer = messageAttachmentToolDefinitionArraySerializer;
exports.messageAttachmentToolDefinitionArrayDeserializer = messageAttachmentToolDefinitionArrayDeserializer;
exports.messageAttachmentToolDefinitionSerializer = messageAttachmentToolDefinitionSerializer;
exports.messageAttachmentToolDefinitionDeserializer = messageAttachmentToolDefinitionDeserializer;
exports._messageAttachmentToolSerializer = _messageAttachmentToolSerializer;
exports._messageAttachmentToolDeserializer = _messageAttachmentToolDeserializer;
exports.updateToolResourcesOptionsSerializer = updateToolResourcesOptionsSerializer;
exports.updateToolResourcesOptionsDeserializer = updateToolResourcesOptionsDeserializer;
exports.updateCodeInterpreterToolResourceOptionsSerializer = updateCodeInterpreterToolResourceOptionsSerializer;
exports.updateCodeInterpreterToolResourceOptionsDeserializer = updateCodeInterpreterToolResourceOptionsDeserializer;
exports.updateFileSearchToolResourceOptionsSerializer = updateFileSearchToolResourceOptionsSerializer;
exports.updateFileSearchToolResourceOptionsDeserializer = updateFileSearchToolResourceOptionsDeserializer;
exports.truncationObjectSerializer = truncationObjectSerializer;
exports.truncationObjectDeserializer = truncationObjectDeserializer;
exports.agentsNamedToolChoiceSerializer = agentsNamedToolChoiceSerializer;
exports.agentsNamedToolChoiceDeserializer = agentsNamedToolChoiceDeserializer;
exports.functionNameSerializer = functionNameSerializer;
exports.functionNameDeserializer = functionNameDeserializer;
exports.agentsToolChoiceOptionSerializer = agentsToolChoiceOptionSerializer;
exports.agentsToolChoiceOptionDeserializer = agentsToolChoiceOptionDeserializer;
exports.threadRunDeserializer = threadRunDeserializer;
exports.requiredActionDeserializer = requiredActionDeserializer;
exports.requiredActionUnionDeserializer = requiredActionUnionDeserializer;
exports.submitToolOutputsActionDeserializer = submitToolOutputsActionDeserializer;
exports.submitToolOutputsDetailsDeserializer = submitToolOutputsDetailsDeserializer;
exports.requiredToolCallUnionArrayDeserializer = requiredToolCallUnionArrayDeserializer;
exports.requiredToolCallDeserializer = requiredToolCallDeserializer;
exports.requiredToolCallUnionDeserializer = requiredToolCallUnionDeserializer;
exports.requiredFunctionToolCallDeserializer = requiredFunctionToolCallDeserializer;
exports.requiredFunctionToolCallDetailsDeserializer = requiredFunctionToolCallDetailsDeserializer;
exports.runErrorDeserializer = runErrorDeserializer;
exports.incompleteRunDetailsDeserializer = incompleteRunDetailsDeserializer;
exports.runCompletionUsageDeserializer = runCompletionUsageDeserializer;
exports.agentThreadDeserializer = agentThreadDeserializer;
exports._agentsPagedResultAgentThreadDeserializer = _agentsPagedResultAgentThreadDeserializer;
exports.agentThreadArrayDeserializer = agentThreadArrayDeserializer;
exports.threadDeletionStatusDeserializer = threadDeletionStatusDeserializer;
exports.threadMessageDeserializer = threadMessageDeserializer;
exports.messageIncompleteDetailsDeserializer = messageIncompleteDetailsDeserializer;
exports.messageContentUnionArrayDeserializer = messageContentUnionArrayDeserializer;
exports.messageContentDeserializer = messageContentDeserializer;
exports.messageContentUnionDeserializer = messageContentUnionDeserializer;
exports.messageTextContentDeserializer = messageTextContentDeserializer;
exports.messageTextDetailsDeserializer = messageTextDetailsDeserializer;
exports.messageTextAnnotationUnionArrayDeserializer = messageTextAnnotationUnionArrayDeserializer;
exports.messageTextAnnotationDeserializer = messageTextAnnotationDeserializer;
exports.messageTextAnnotationUnionDeserializer = messageTextAnnotationUnionDeserializer;
exports.messageTextUrlCitationAnnotationDeserializer = messageTextUrlCitationAnnotationDeserializer;
exports.messageTextUrlCitationDetailsDeserializer = messageTextUrlCitationDetailsDeserializer;
exports.messageTextFileCitationAnnotationDeserializer = messageTextFileCitationAnnotationDeserializer;
exports.messageTextFileCitationDetailsDeserializer = messageTextFileCitationDetailsDeserializer;
exports.messageTextFilePathAnnotationDeserializer = messageTextFilePathAnnotationDeserializer;
exports.messageTextFilePathDetailsDeserializer = messageTextFilePathDetailsDeserializer;
exports.messageImageFileContentDeserializer = messageImageFileContentDeserializer;
exports.messageImageFileDetailsDeserializer = messageImageFileDetailsDeserializer;
exports._agentsPagedResultThreadMessageDeserializer = _agentsPagedResultThreadMessageDeserializer;
exports.threadMessageArrayDeserializer = threadMessageArrayDeserializer;
exports._agentsPagedResultThreadRunDeserializer = _agentsPagedResultThreadRunDeserializer;
exports.threadRunArrayDeserializer = threadRunArrayDeserializer;
exports.toolOutputSerializer = toolOutputSerializer;
exports.toolOutputArraySerializer = toolOutputArraySerializer;
exports.runStepDeserializer = runStepDeserializer;
exports.runStepDetailsDeserializer = runStepDetailsDeserializer;
exports.runStepDetailsUnionDeserializer = runStepDetailsUnionDeserializer;
exports.runStepMessageCreationDetailsDeserializer = runStepMessageCreationDetailsDeserializer;
exports.runStepMessageCreationReferenceDeserializer = runStepMessageCreationReferenceDeserializer;
exports.runStepToolCallDetailsDeserializer = runStepToolCallDetailsDeserializer;
exports.runStepToolCallUnionArrayDeserializer = runStepToolCallUnionArrayDeserializer;
exports.runStepToolCallDeserializer = runStepToolCallDeserializer;
exports.runStepToolCallUnionDeserializer = runStepToolCallUnionDeserializer;
exports.runStepCodeInterpreterToolCallDeserializer = runStepCodeInterpreterToolCallDeserializer;
exports.runStepCodeInterpreterToolCallDetailsDeserializer = runStepCodeInterpreterToolCallDetailsDeserializer;
exports.runStepCodeInterpreterToolCallOutputUnionArrayDeserializer = runStepCodeInterpreterToolCallOutputUnionArrayDeserializer;
exports.runStepCodeInterpreterToolCallOutputDeserializer = runStepCodeInterpreterToolCallOutputDeserializer;
exports.runStepCodeInterpreterToolCallOutputUnionDeserializer = runStepCodeInterpreterToolCallOutputUnionDeserializer;
exports.runStepCodeInterpreterLogOutputDeserializer = runStepCodeInterpreterLogOutputDeserializer;
exports.runStepCodeInterpreterImageOutputDeserializer = runStepCodeInterpreterImageOutputDeserializer;
exports.runStepCodeInterpreterImageReferenceDeserializer = runStepCodeInterpreterImageReferenceDeserializer;
exports.runStepFileSearchToolCallDeserializer = runStepFileSearchToolCallDeserializer;
exports.runStepFileSearchToolCallResultsDeserializer = runStepFileSearchToolCallResultsDeserializer;
exports.runStepFileSearchToolCallResultArrayDeserializer = runStepFileSearchToolCallResultArrayDeserializer;
exports.runStepFileSearchToolCallResultDeserializer = runStepFileSearchToolCallResultDeserializer;
exports.fileSearchToolCallContentArrayDeserializer = fileSearchToolCallContentArrayDeserializer;
exports.fileSearchToolCallContentDeserializer = fileSearchToolCallContentDeserializer;
exports.runStepBingGroundingToolCallDeserializer = runStepBingGroundingToolCallDeserializer;
exports.runStepAzureAISearchToolCallDeserializer = runStepAzureAISearchToolCallDeserializer;
exports.runStepSharepointToolCallDeserializer = runStepSharepointToolCallDeserializer;
exports.runStepMicrosoftFabricToolCallDeserializer = runStepMicrosoftFabricToolCallDeserializer;
exports.runStepBingCustomSearchToolCallDeserializer = runStepBingCustomSearchToolCallDeserializer;
exports.runStepFunctionToolCallDeserializer = runStepFunctionToolCallDeserializer;
exports.runStepFunctionToolCallDetailsDeserializer = runStepFunctionToolCallDetailsDeserializer;
exports.runStepOpenAPIToolCallDeserializer = runStepOpenAPIToolCallDeserializer;
exports.runStepErrorDeserializer = runStepErrorDeserializer;
exports.runStepCompletionUsageDeserializer = runStepCompletionUsageDeserializer;
exports._agentsPagedResultRunStepDeserializer = _agentsPagedResultRunStepDeserializer;
exports.runStepArrayDeserializer = runStepArrayDeserializer;
exports.fileListResponseDeserializer = fileListResponseDeserializer;
exports.fileInfoArrayDeserializer = fileInfoArrayDeserializer;
exports.fileInfoDeserializer = fileInfoDeserializer;
exports._uploadFileRequestSerializer = _uploadFileRequestSerializer;
exports.fileDeletionStatusDeserializer = fileDeletionStatusDeserializer;
exports._agentsPagedResultVectorStoreDeserializer = _agentsPagedResultVectorStoreDeserializer;
exports.vectorStoreArrayDeserializer = vectorStoreArrayDeserializer;
exports.vectorStoreDeserializer = vectorStoreDeserializer;
exports.vectorStoreFileCountDeserializer = vectorStoreFileCountDeserializer;
exports.vectorStoreExpirationPolicySerializer = vectorStoreExpirationPolicySerializer;
exports.vectorStoreExpirationPolicyDeserializer = vectorStoreExpirationPolicyDeserializer;
exports.vectorStoreChunkingStrategyRequestSerializer = vectorStoreChunkingStrategyRequestSerializer;
exports.vectorStoreChunkingStrategyRequestUnionSerializer = vectorStoreChunkingStrategyRequestUnionSerializer;
exports.vectorStoreAutoChunkingStrategyRequestSerializer = vectorStoreAutoChunkingStrategyRequestSerializer;
exports.vectorStoreStaticChunkingStrategyRequestSerializer = vectorStoreStaticChunkingStrategyRequestSerializer;
exports.vectorStoreStaticChunkingStrategyOptionsSerializer = vectorStoreStaticChunkingStrategyOptionsSerializer;
exports.vectorStoreStaticChunkingStrategyOptionsDeserializer = vectorStoreStaticChunkingStrategyOptionsDeserializer;
exports.vectorStoreDeletionStatusDeserializer = vectorStoreDeletionStatusDeserializer;
exports._agentsPagedResultVectorStoreFileDeserializer = _agentsPagedResultVectorStoreFileDeserializer;
exports.vectorStoreFileArrayDeserializer = vectorStoreFileArrayDeserializer;
exports.vectorStoreFileDeserializer = vectorStoreFileDeserializer;
exports.vectorStoreFileErrorDeserializer = vectorStoreFileErrorDeserializer;
exports.vectorStoreChunkingStrategyResponseDeserializer = vectorStoreChunkingStrategyResponseDeserializer;
exports.vectorStoreChunkingStrategyResponseUnionDeserializer = vectorStoreChunkingStrategyResponseUnionDeserializer;
exports.vectorStoreAutoChunkingStrategyResponseDeserializer = vectorStoreAutoChunkingStrategyResponseDeserializer;
exports.vectorStoreStaticChunkingStrategyResponseDeserializer = vectorStoreStaticChunkingStrategyResponseDeserializer;
exports.vectorStoreFileDeletionStatusDeserializer = vectorStoreFileDeletionStatusDeserializer;
exports.vectorStoreFileBatchDeserializer = vectorStoreFileBatchDeserializer;
exports.messageDeltaChunkDeserializer = messageDeltaChunkDeserializer;
exports.messageDeltaDeserializer = messageDeltaDeserializer;
exports.messageDeltaContentUnionArrayDeserializer = messageDeltaContentUnionArrayDeserializer;
exports.messageDeltaContentDeserializer = messageDeltaContentDeserializer;
exports.messageDeltaContentUnionDeserializer = messageDeltaContentUnionDeserializer;
exports.messageDeltaImageFileContentDeserializer = messageDeltaImageFileContentDeserializer;
exports.messageDeltaImageFileContentObjectDeserializer = messageDeltaImageFileContentObjectDeserializer;
exports.messageDeltaTextContentDeserializer = messageDeltaTextContentDeserializer;
exports.messageDeltaTextContentObjectDeserializer = messageDeltaTextContentObjectDeserializer;
exports.messageDeltaTextAnnotationUnionArrayDeserializer = messageDeltaTextAnnotationUnionArrayDeserializer;
exports.messageDeltaTextAnnotationDeserializer = messageDeltaTextAnnotationDeserializer;
exports.messageDeltaTextAnnotationUnionDeserializer = messageDeltaTextAnnotationUnionDeserializer;
exports.messageDeltaTextUrlCitationAnnotationDeserializer = messageDeltaTextUrlCitationAnnotationDeserializer;
exports.messageDeltaTextUrlCitationDetailsDeserializer = messageDeltaTextUrlCitationDetailsDeserializer;
exports.messageDeltaTextFileCitationAnnotationDeserializer = messageDeltaTextFileCitationAnnotationDeserializer;
exports.messageDeltaTextFileCitationAnnotationObjectDeserializer = messageDeltaTextFileCitationAnnotationObjectDeserializer;
exports.messageDeltaTextFilePathAnnotationDeserializer = messageDeltaTextFilePathAnnotationDeserializer;
exports.messageDeltaTextFilePathAnnotationObjectDeserializer = messageDeltaTextFilePathAnnotationObjectDeserializer;
exports.runStepDeltaChunkDeserializer = runStepDeltaChunkDeserializer;
exports.runStepDeltaDeserializer = runStepDeltaDeserializer;
exports.runStepDeltaDetailDeserializer = runStepDeltaDetailDeserializer;
exports.runStepDeltaDetailUnionDeserializer = runStepDeltaDetailUnionDeserializer;
exports.runStepDeltaMessageCreationDeserializer = runStepDeltaMessageCreationDeserializer;
exports.runStepDeltaMessageCreationObjectDeserializer = runStepDeltaMessageCreationObjectDeserializer;
exports.runStepDeltaToolCallObjectDeserializer = runStepDeltaToolCallObjectDeserializer;
exports.runStepDeltaToolCallUnionArrayDeserializer = runStepDeltaToolCallUnionArrayDeserializer;
exports.runStepDeltaToolCallDeserializer = runStepDeltaToolCallDeserializer;
exports.runStepDeltaToolCallUnionDeserializer = runStepDeltaToolCallUnionDeserializer;
exports.runStepDeltaFunctionToolCallDeserializer = runStepDeltaFunctionToolCallDeserializer;
exports.runStepDeltaFunctionDeserializer = runStepDeltaFunctionDeserializer;
exports.runStepDeltaFileSearchToolCallDeserializer = runStepDeltaFileSearchToolCallDeserializer;
exports.runStepDeltaCodeInterpreterToolCallDeserializer = runStepDeltaCodeInterpreterToolCallDeserializer;
exports.runStepDeltaCodeInterpreterDetailItemObjectDeserializer = runStepDeltaCodeInterpreterDetailItemObjectDeserializer;
exports.runStepDeltaCodeInterpreterOutputUnionArrayDeserializer = runStepDeltaCodeInterpreterOutputUnionArrayDeserializer;
exports.runStepDeltaCodeInterpreterOutputDeserializer = runStepDeltaCodeInterpreterOutputDeserializer;
exports.runStepDeltaCodeInterpreterOutputUnionDeserializer = runStepDeltaCodeInterpreterOutputUnionDeserializer;
exports.runStepDeltaCodeInterpreterLogOutputDeserializer = runStepDeltaCodeInterpreterLogOutputDeserializer;
exports.runStepDeltaCodeInterpreterImageOutputDeserializer = runStepDeltaCodeInterpreterImageOutputDeserializer;
exports.runStepDeltaCodeInterpreterImageOutputObjectDeserializer = runStepDeltaCodeInterpreterImageOutputObjectDeserializer;
exports.agentStreamEventDeserializer = agentStreamEventDeserializer;
/* eslint-disable @typescript-eslint/naming-convention */
/* eslint-disable @typescript-eslint/explicit-module-boundary-types */
const core_util_1 = require("@azure/core-util");
function toolDefinitionSerializer(item) {
    return { type: item["type"] };
}
function toolDefinitionDeserializer(item) {
    return {
        type: item["type"],
    };
}
function toolDefinitionUnionSerializer(item) {
    switch (item.type) {
        case "code_interpreter":
            return codeInterpreterToolDefinitionSerializer(item);
        case "file_search":
            return fileSearchToolDefinitionSerializer(item);
        case "function":
            return functionToolDefinitionSerializer(item);
        case "bing_grounding":
            return bingGroundingToolDefinitionSerializer(item);
        case "fabric_dataagent":
            return microsoftFabricToolDefinitionSerializer(item);
        case "sharepoint_grounding":
            return sharepointToolDefinitionSerializer(item);
        case "azure_ai_search":
            return azureAISearchToolDefinitionSerializer(item);
        case "openapi":
            return openApiToolDefinitionSerializer(item);
        case "bing_custom_search":
            return bingCustomSearchToolDefinitionSerializer(item);
        case "connected_agent":
            return connectedAgentToolDefinitionSerializer(item);
        case "azure_function":
            return azureFunctionToolDefinitionSerializer(item);
        default:
            return toolDefinitionSerializer(item);
    }
}
function toolDefinitionUnionDeserializer(item) {
    switch (item.type) {
        case "code_interpreter":
            return codeInterpreterToolDefinitionDeserializer(item);
        case "file_search":
            return fileSearchToolDefinitionDeserializer(item);
        case "function":
            return functionToolDefinitionDeserializer(item);
        case "bing_grounding":
            return bingGroundingToolDefinitionDeserializer(item);
        case "fabric_dataagent":
            return microsoftFabricToolDefinitionDeserializer(item);
        case "sharepoint_grounding":
            return sharepointToolDefinitionDeserializer(item);
        case "azure_ai_search":
            return azureAISearchToolDefinitionDeserializer(item);
        case "openapi":
            return openApiToolDefinitionDeserializer(item);
        case "bing_custom_search":
            return bingCustomSearchToolDefinitionDeserializer(item);
        case "connected_agent":
            return connectedAgentToolDefinitionDeserializer(item);
        case "azure_function":
            return azureFunctionToolDefinitionDeserializer(item);
        default:
            return toolDefinitionDeserializer(item);
    }
}
function codeInterpreterToolDefinitionSerializer(item) {
    return { type: item["type"] };
}
function codeInterpreterToolDefinitionDeserializer(item) {
    return {
        type: item["type"],
    };
}
function fileSearchToolDefinitionSerializer(item) {
    return {
        type: item["type"],
        file_search: !item["fileSearch"]
            ? item["fileSearch"]
            : fileSearchToolDefinitionDetailsSerializer(item["fileSearch"]),
    };
}
function fileSearchToolDefinitionDeserializer(item) {
    return {
        type: item["type"],
        fileSearch: !item["file_search"]
            ? item["file_search"]
            : fileSearchToolDefinitionDetailsDeserializer(item["file_search"]),
    };
}
function fileSearchToolDefinitionDetailsSerializer(item) {
    return {
        max_num_results: item["maxNumResults"],
        ranking_options: !item["rankingOptions"]
            ? item["rankingOptions"]
            : fileSearchRankingOptionsSerializer(item["rankingOptions"]),
    };
}
function fileSearchToolDefinitionDetailsDeserializer(item) {
    return {
        maxNumResults: item["max_num_results"],
        rankingOptions: !item["ranking_options"]
            ? item["ranking_options"]
            : fileSearchRankingOptionsDeserializer(item["ranking_options"]),
    };
}
function fileSearchRankingOptionsSerializer(item) {
    return { ranker: item["ranker"], score_threshold: item["scoreThreshold"] };
}
function fileSearchRankingOptionsDeserializer(item) {
    return {
        ranker: item["ranker"],
        scoreThreshold: item["score_threshold"],
    };
}
function functionToolDefinitionSerializer(item) {
    return {
        type: item["type"],
        function: functionDefinitionSerializer(item["function"]),
    };
}
function functionToolDefinitionDeserializer(item) {
    return {
        type: item["type"],
        function: functionDefinitionDeserializer(item["function"]),
    };
}
function functionDefinitionSerializer(item) {
    return {
        name: item["name"],
        description: item["description"],
        parameters: item["parameters"],
    };
}
function functionDefinitionDeserializer(item) {
    return {
        name: item["name"],
        description: item["description"],
        parameters: item["parameters"],
    };
}
function bingGroundingToolDefinitionSerializer(item) {
    return {
        type: item["type"],
        bing_grounding: bingGroundingSearchConfigurationListSerializer(item["bingGrounding"]),
    };
}
function bingGroundingToolDefinitionDeserializer(item) {
    return {
        type: item["type"],
        bingGrounding: bingGroundingSearchConfigurationListDeserializer(item["bing_grounding"]),
    };
}
function bingGroundingSearchConfigurationListSerializer(item) {
    return {
        search_configurations: bingGroundingSearchConfigurationArraySerializer(item["searchConfigurations"]),
    };
}
function bingGroundingSearchConfigurationListDeserializer(item) {
    // Handle the case where item might be undefined
    if (!item) {
        return { searchConfigurations: [] };
    }
    return {
        searchConfigurations: bingGroundingSearchConfigurationArrayDeserializer(item["search_configurations"]),
    };
}
function bingGroundingSearchConfigurationArraySerializer(result) {
    return result.map((item) => {
        return bingGroundingSearchConfigurationSerializer(item);
    });
}
function bingGroundingSearchConfigurationArrayDeserializer(result) {
    // Handle the case where result might be undefined
    if (!result) {
        return [];
    }
    return result.map((item) => {
        return bingGroundingSearchConfigurationDeserializer(item);
    });
}
function bingGroundingSearchConfigurationSerializer(item) {
    return {
        connection_id: item["connectionId"],
        market: item["market"],
        set_lang: item["setLang"],
        count: item["count"],
        freshness: item["freshness"],
    };
}
function bingGroundingSearchConfigurationDeserializer(item) {
    return {
        connectionId: item["connection_id"],
        market: item["market"],
        setLang: item["set_lang"],
        count: item["count"],
        freshness: item["freshness"],
    };
}
function microsoftFabricToolDefinitionSerializer(item) {
    return {
        type: item["type"],
        fabric_dataagent: toolConnectionListSerializer(item["fabricDataagent"]),
    };
}
function microsoftFabricToolDefinitionDeserializer(item) {
    return {
        type: item["type"],
        fabricDataagent: toolConnectionListDeserializer(item["fabric_dataagent"]),
    };
}
function toolConnectionListSerializer(item) {
    return {
        connections: !item["connectionList"]
            ? item["connectionList"]
            : toolConnectionArraySerializer(item["connectionList"]),
    };
}
function toolConnectionListDeserializer(item) {
    return {
        connectionList: !item["connections"]
            ? item["connections"]
            : toolConnectionArrayDeserializer(item["connections"]),
    };
}
function toolConnectionArraySerializer(result) {
    return result.map((item) => {
        return toolConnectionSerializer(item);
    });
}
function toolConnectionArrayDeserializer(result) {
    return result.map((item) => {
        return toolConnectionDeserializer(item);
    });
}
function toolConnectionSerializer(item) {
    return { connection_id: item["connectionId"] };
}
function toolConnectionDeserializer(item) {
    return {
        connectionId: item["connection_id"],
    };
}
function sharepointToolDefinitionSerializer(item) {
    return {
        type: item["type"],
        sharepoint_grounding: toolConnectionListSerializer(item["sharepointGrounding"]),
    };
}
function sharepointToolDefinitionDeserializer(item) {
    return {
        type: item["type"],
        sharepointGrounding: toolConnectionListDeserializer(item["sharepoint_grounding"]),
    };
}
function azureAISearchToolDefinitionSerializer(item) {
    return { type: item["type"] };
}
function azureAISearchToolDefinitionDeserializer(item) {
    return {
        type: item["type"],
    };
}
function openApiToolDefinitionSerializer(item) {
    return {
        type: item["type"],
        openapi: openApiFunctionDefinitionSerializer(item["openapi"]),
    };
}
function openApiToolDefinitionDeserializer(item) {
    return {
        type: item["type"],
        openapi: openApiFunctionDefinitionDeserializer(item["openapi"]),
    };
}
function openApiFunctionDefinitionSerializer(item) {
    return {
        name: item["name"],
        description: item["description"],
        spec: item["spec"],
        auth: openApiAuthDetailsUnionSerializer(item["auth"]),
        default_params: !item["defaultParams"]
            ? item["defaultParams"]
            : item["defaultParams"].map((p) => {
                return p;
            }),
    };
}
function openApiFunctionDefinitionDeserializer(item) {
    return {
        name: item["name"],
        description: item["description"],
        spec: item["spec"],
        auth: openApiAuthDetailsUnionDeserializer(item["auth"]),
        defaultParams: !item["default_params"]
            ? item["default_params"]
            : item["default_params"].map((p) => {
                return p;
            }),
    };
}
function openApiAuthDetailsSerializer(item) {
    return { type: item["type"] };
}
function openApiAuthDetailsDeserializer(item) {
    return {
        type: item["type"],
    };
}
function openApiAuthDetailsUnionSerializer(item) {
    switch (item.type) {
        case "anonymous":
            return openApiAnonymousAuthDetailsSerializer(item);
        case "connection":
            return openApiConnectionAuthDetailsSerializer(item);
        case "managed_identity":
            return openApiManagedAuthDetailsSerializer(item);
        default:
            return openApiAuthDetailsSerializer(item);
    }
}
function openApiAuthDetailsUnionDeserializer(item) {
    switch (item.type) {
        case "anonymous":
            return openApiAnonymousAuthDetailsDeserializer(item);
        case "connection":
            return openApiConnectionAuthDetailsDeserializer(item);
        case "managed_identity":
            return openApiManagedAuthDetailsDeserializer(item);
        default:
            return openApiAuthDetailsDeserializer(item);
    }
}
function openApiAnonymousAuthDetailsSerializer(item) {
    return { type: item["type"] };
}
function openApiAnonymousAuthDetailsDeserializer(item) {
    return {
        type: item["type"],
    };
}
function openApiConnectionAuthDetailsSerializer(item) {
    return {
        type: item["type"],
        security_scheme: openApiConnectionSecuritySchemeSerializer(item["securityScheme"]),
    };
}
function openApiConnectionAuthDetailsDeserializer(item) {
    return {
        type: item["type"],
        securityScheme: openApiConnectionSecuritySchemeDeserializer(item["security_scheme"]),
    };
}
function openApiConnectionSecuritySchemeSerializer(item) {
    return { connection_id: item["connectionId"] };
}
function openApiConnectionSecuritySchemeDeserializer(item) {
    return {
        connectionId: item["connection_id"],
    };
}
function openApiManagedAuthDetailsSerializer(item) {
    return {
        type: item["type"],
        security_scheme: openApiManagedSecuritySchemeSerializer(item["securityScheme"]),
    };
}
function openApiManagedAuthDetailsDeserializer(item) {
    return {
        type: item["type"],
        securityScheme: openApiManagedSecuritySchemeDeserializer(item["security_scheme"]),
    };
}
function openApiManagedSecuritySchemeSerializer(item) {
    return { audience: item["audience"] };
}
function openApiManagedSecuritySchemeDeserializer(item) {
    return {
        audience: item["audience"],
    };
}
function bingCustomSearchToolDefinitionSerializer(item) {
    return {
        type: item["type"],
        bing_custom_search: bingCustomSearchConfigurationListSerializer(item["bingCustomSearch"]),
    };
}
function bingCustomSearchToolDefinitionDeserializer(item) {
    return {
        type: item["type"],
        bingCustomSearch: bingCustomSearchConfigurationListDeserializer(item["bing_custom_search"]),
    };
}
function bingCustomSearchConfigurationListSerializer(item) {
    return {
        search_configurations: bingCustomSearchConfigurationArraySerializer(item["searchConfigurations"]),
    };
}
function bingCustomSearchConfigurationListDeserializer(item) {
    return {
        searchConfigurations: bingCustomSearchConfigurationArrayDeserializer(item["search_configurations"]),
    };
}
function bingCustomSearchConfigurationArraySerializer(result) {
    return result.map((item) => {
        return bingCustomSearchConfigurationSerializer(item);
    });
}
function bingCustomSearchConfigurationArrayDeserializer(result) {
    return result.map((item) => {
        return bingCustomSearchConfigurationDeserializer(item);
    });
}
function bingCustomSearchConfigurationSerializer(item) {
    return {
        connection_id: item["connectionId"],
        instance_name: item["instanceName"],
        market: item["market"],
        set_lang: item["setLang"],
        count: item["count"],
        freshness: item["freshness"],
    };
}
function bingCustomSearchConfigurationDeserializer(item) {
    return {
        connectionId: item["connection_id"],
        instanceName: item["instance_name"],
        market: item["market"],
        setLang: item["set_lang"],
        count: item["count"],
        freshness: item["freshness"],
    };
}
function connectedAgentToolDefinitionSerializer(item) {
    return {
        type: item["type"],
        connected_agent: connectedAgentDetailsSerializer(item["connectedAgent"]),
    };
}
function connectedAgentToolDefinitionDeserializer(item) {
    return {
        type: item["type"],
        connectedAgent: connectedAgentDetailsDeserializer(item["connected_agent"]),
    };
}
function connectedAgentDetailsSerializer(item) {
    return {
        id: item["id"],
        name: item["name"],
        description: item["description"],
    };
}
function connectedAgentDetailsDeserializer(item) {
    return {
        id: item["id"],
        name: item["name"],
        description: item["description"],
    };
}
function azureFunctionToolDefinitionSerializer(item) {
    return {
        type: item["type"],
        azure_function: azureFunctionDefinitionSerializer(item["azureFunction"]),
    };
}
function azureFunctionToolDefinitionDeserializer(item) {
    return {
        type: item["type"],
        azureFunction: azureFunctionDefinitionDeserializer(item["azure_function"]),
    };
}
function azureFunctionDefinitionSerializer(item) {
    return {
        function: functionDefinitionSerializer(item["function"]),
        input_binding: azureFunctionBindingSerializer(item["inputBinding"]),
        output_binding: azureFunctionBindingSerializer(item["outputBinding"]),
    };
}
function azureFunctionDefinitionDeserializer(item) {
    return {
        function: functionDefinitionDeserializer(item["function"]),
        inputBinding: azureFunctionBindingDeserializer(item["input_binding"]),
        outputBinding: azureFunctionBindingDeserializer(item["output_binding"]),
    };
}
function azureFunctionBindingSerializer(item) {
    return {
        type: item["type"],
        storage_queue: azureFunctionStorageQueueSerializer(item["storageQueue"]),
    };
}
function azureFunctionBindingDeserializer(item) {
    return {
        type: item["type"],
        storageQueue: azureFunctionStorageQueueDeserializer(item["storage_queue"]),
    };
}
function azureFunctionStorageQueueSerializer(item) {
    return {
        queue_service_endpoint: item["storageServiceEndpoint"],
        queue_name: item["queueName"],
    };
}
function azureFunctionStorageQueueDeserializer(item) {
    return {
        storageServiceEndpoint: item["queue_service_endpoint"],
        queueName: item["queue_name"],
    };
}
function toolResourcesSerializer(item) {
    return {
        code_interpreter: !item["codeInterpreter"]
            ? item["codeInterpreter"]
            : codeInterpreterToolResourceSerializer(item["codeInterpreter"]),
        file_search: !item["fileSearch"]
            ? item["fileSearch"]
            : fileSearchToolResourceSerializer(item["fileSearch"]),
        azure_ai_search: !item["azureAISearch"]
            ? item["azureAISearch"]
            : azureAISearchResourceSerializer(item["azureAISearch"]),
    };
}
function toolResourcesDeserializer(item) {
    return {
        codeInterpreter: !item["code_interpreter"]
            ? item["code_interpreter"]
            : codeInterpreterToolResourceDeserializer(item["code_interpreter"]),
        fileSearch: !item["file_search"]
            ? item["file_search"]
            : fileSearchToolResourceDeserializer(item["file_search"]),
        azureAISearch: !item["azure_ai_search"]
            ? item["azure_ai_search"]
            : azureAISearchResourceDeserializer(item["azure_ai_search"]),
    };
}
function codeInterpreterToolResourceSerializer(item) {
    return {
        file_ids: !item["fileIds"]
            ? item["fileIds"]
            : item["fileIds"].map((p) => {
                return p;
            }),
        data_sources: !item["dataSources"]
            ? item["dataSources"]
            : vectorStoreDataSourceArraySerializer(item["dataSources"]),
    };
}
function codeInterpreterToolResourceDeserializer(item) {
    return {
        fileIds: !item["file_ids"]
            ? item["file_ids"]
            : item["file_ids"].map((p) => {
                return p;
            }),
        dataSources: !item["data_sources"]
            ? item["data_sources"]
            : vectorStoreDataSourceArrayDeserializer(item["data_sources"]),
    };
}
function vectorStoreDataSourceArraySerializer(result) {
    return result.map((item) => {
        return vectorStoreDataSourceSerializer(item);
    });
}
function vectorStoreDataSourceArrayDeserializer(result) {
    return result.map((item) => {
        return vectorStoreDataSourceDeserializer(item);
    });
}
function vectorStoreDataSourceSerializer(item) {
    return { uri: item["assetIdentifier"], type: item["assetType"] };
}
function vectorStoreDataSourceDeserializer(item) {
    return {
        assetIdentifier: item["uri"],
        assetType: item["type"],
    };
}
/**
 * Type of vector storage asset. Asset type may be a uri_asset, in this case it should contain asset URI ID,
 * in the case of id_asset it should contain the data ID.
 */
var VectorStoreDataSourceAssetType;
(function (VectorStoreDataSourceAssetType) {
    VectorStoreDataSourceAssetType["UriAsset"] = "uri_asset";
    VectorStoreDataSourceAssetType["IdAsset"] = "id_asset";
})(VectorStoreDataSourceAssetType || (exports.VectorStoreDataSourceAssetType = VectorStoreDataSourceAssetType = {}));
function fileSearchToolResourceSerializer(item) {
    return {
        vector_store_ids: !item["vectorStoreIds"]
            ? item["vectorStoreIds"]
            : item["vectorStoreIds"].map((p) => {
                return p;
            }),
        vector_stores: !item["vectorStores"]
            ? item["vectorStores"]
            : vectorStoreConfigurationsArraySerializer(item["vectorStores"]),
    };
}
function fileSearchToolResourceDeserializer(item) {
    return {
        vectorStoreIds: !item["vector_store_ids"]
            ? item["vector_store_ids"]
            : item["vector_store_ids"].map((p) => {
                return p;
            }),
        vectorStores: !item["vector_stores"]
            ? item["vector_stores"]
            : vectorStoreConfigurationsArrayDeserializer(item["vector_stores"]),
    };
}
function vectorStoreConfigurationsArraySerializer(result) {
    return result.map((item) => {
        return vectorStoreConfigurationsSerializer(item);
    });
}
function vectorStoreConfigurationsArrayDeserializer(result) {
    return result.map((item) => {
        return vectorStoreConfigurationsDeserializer(item);
    });
}
function vectorStoreConfigurationsSerializer(item) {
    return {
        name: item["storeName"],
        configuration: vectorStoreConfigurationSerializer(item["storeConfiguration"]),
    };
}
function vectorStoreConfigurationsDeserializer(item) {
    return {
        storeName: item["name"],
        storeConfiguration: vectorStoreConfigurationDeserializer(item["configuration"]),
    };
}
function vectorStoreConfigurationSerializer(item) {
    return {
        data_sources: vectorStoreDataSourceArraySerializer(item["dataSources"]),
    };
}
function vectorStoreConfigurationDeserializer(item) {
    return {
        dataSources: vectorStoreDataSourceArrayDeserializer(item["data_sources"]),
    };
}
function azureAISearchResourceSerializer(item) {
    return {
        indexes: !item["indexList"]
            ? item["indexList"]
            : aiSearchIndexResourceArraySerializer(item["indexList"]),
    };
}
function azureAISearchResourceDeserializer(item) {
    return {
        indexList: !item["indexes"]
            ? item["indexes"]
            : aiSearchIndexResourceArrayDeserializer(item["indexes"]),
    };
}
function aiSearchIndexResourceArraySerializer(result) {
    return result.map((item) => {
        return aiSearchIndexResourceSerializer(item);
    });
}
function aiSearchIndexResourceArrayDeserializer(result) {
    return result.map((item) => {
        return aiSearchIndexResourceDeserializer(item);
    });
}
function aiSearchIndexResourceSerializer(item) {
    return {
        index_connection_id: item["indexConnectionId"],
        index_name: item["indexName"],
        query_type: item["queryType"],
        top_k: item["topK"],
        filter: item["filter"],
        index_asset_id: item["indexAssetId"],
    };
}
function aiSearchIndexResourceDeserializer(item) {
    return {
        indexConnectionId: item["index_connection_id"],
        indexName: item["index_name"],
        queryType: item["query_type"],
        topK: item["top_k"],
        filter: item["filter"],
        indexAssetId: item["index_asset_id"],
    };
}
function agentsResponseFormatSerializer(item) {
    return { type: item["type"] };
}
function agentsResponseFormatDeserializer(item) {
    return {
        type: item["type"],
    };
}
function responseFormatJsonSchemaTypeSerializer(item) {
    return {
        type: item["type"],
        json_schema: responseFormatJsonSchemaSerializer(item["jsonSchema"]),
    };
}
function responseFormatJsonSchemaTypeDeserializer(item) {
    return {
        type: item["type"],
        jsonSchema: responseFormatJsonSchemaDeserializer(item["json_schema"]),
    };
}
function responseFormatJsonSchemaSerializer(item) {
    return {
        description: item["description"],
        name: item["name"],
        schema: item["schema"],
    };
}
function responseFormatJsonSchemaDeserializer(item) {
    return {
        description: item["description"],
        name: item["name"],
        schema: item["schema"],
    };
}
function toolDefinitionUnionArraySerializer(result) {
    return result.map((item) => {
        return toolDefinitionUnionSerializer(item);
    });
}
function toolDefinitionUnionArrayDeserializer(result) {
    return result.map((item) => {
        return toolDefinitionUnionDeserializer(item);
    });
}
function agentsResponseFormatOptionSerializer(item) {
    return item;
}
function agentsResponseFormatOptionDeserializer(item) {
    return item;
}
function agentDeserializer(item) {
    return {
        id: item["id"],
        object: item["object"],
        createdAt: new Date(item["created_at"] * 1000),
        name: item["name"],
        description: item["description"],
        model: item["model"],
        instructions: item["instructions"],
        tools: toolDefinitionUnionArrayDeserializer(item["tools"]),
        toolResources: !item["tool_resources"]
            ? item["tool_resources"]
            : toolResourcesDeserializer(item["tool_resources"]),
        temperature: item["temperature"],
        topP: item["top_p"],
        responseFormat: !item["response_format"]
            ? item["response_format"]
            : agentsResponseFormatOptionDeserializer(item["response_format"]),
        metadata: item["metadata"],
    };
}
function _agentsPagedResultAgentDeserializer(item) {
    return {
        data: agentArrayDeserializer(item["data"]),
        lastId: item["last_id"],
        hasMore: item["has_more"],
    };
}
function agentArrayDeserializer(result) {
    return result.map((item) => {
        return agentDeserializer(item);
    });
}
function agentDeletionStatusDeserializer(item) {
    return {
        id: item["id"],
        deleted: item["deleted"],
        object: item["object"],
    };
}
function agentThreadCreationOptionsSerializer(item) {
    return {
        messages: !item["messages"]
            ? item["messages"]
            : threadMessageOptionsArraySerializer(item["messages"]),
        tool_resources: !item["toolResources"]
            ? item["toolResources"]
            : toolResourcesSerializer(item["toolResources"]),
        metadata: item["metadata"],
    };
}
function threadMessageOptionsArraySerializer(result) {
    return result.map((item) => {
        return threadMessageOptionsSerializer(item);
    });
}
function threadMessageOptionsSerializer(item) {
    return {
        role: item["role"],
        content: messageInputContentSerializer(item["content"]),
        attachments: !item["attachments"]
            ? item["attachments"]
            : messageAttachmentArraySerializer(item["attachments"]),
        metadata: item["metadata"],
    };
}
function messageInputContentSerializer(item) {
    return item;
}
function messageInputContentBlockUnionArraySerializer(result) {
    return result.map((item) => {
        return messageInputContentBlockUnionSerializer(item);
    });
}
function messageInputContentBlockSerializer(item) {
    return { type: item["type"] };
}
function messageInputContentBlockUnionSerializer(item) {
    switch (item.type) {
        case "text":
            return messageInputTextBlockSerializer(item);
        case "image_file":
            return messageInputImageFileBlockSerializer(item);
        case "image_url":
            return messageInputImageUrlBlockSerializer(item);
        default:
            return messageInputContentBlockSerializer(item);
    }
}
function messageInputTextBlockSerializer(item) {
    return { type: item["type"], text: item["text"] };
}
function messageInputImageFileBlockSerializer(item) {
    return {
        type: item["type"],
        image_file: messageImageFileParamSerializer(item["imageFile"]),
    };
}
function messageImageFileParamSerializer(item) {
    return { file_id: item["fileId"], detail: item["detail"] };
}
function messageInputImageUrlBlockSerializer(item) {
    return {
        type: item["type"],
        image_url: messageImageUrlParamSerializer(item["imageUrl"]),
    };
}
function messageImageUrlParamSerializer(item) {
    return { url: item["url"], detail: item["detail"] };
}
function messageAttachmentArraySerializer(result) {
    return result.map((item) => {
        return messageAttachmentSerializer(item);
    });
}
function messageAttachmentArrayDeserializer(result) {
    return result.map((item) => {
        return messageAttachmentDeserializer(item);
    });
}
function messageAttachmentSerializer(item) {
    return {
        file_id: item["fileId"],
        data_source: !item["dataSource"]
            ? item["dataSource"]
            : vectorStoreDataSourceSerializer(item["dataSource"]),
        tools: messageAttachmentToolDefinitionArraySerializer(item["tools"]),
    };
}
function messageAttachmentDeserializer(item) {
    return {
        fileId: item["file_id"],
        dataSource: !item["data_source"]
            ? item["data_source"]
            : vectorStoreDataSourceDeserializer(item["data_source"]),
        tools: messageAttachmentToolDefinitionArrayDeserializer(item["tools"]),
    };
}
function messageAttachmentToolDefinitionArraySerializer(result) {
    return result.map((item) => {
        return messageAttachmentToolDefinitionSerializer(item);
    });
}
function messageAttachmentToolDefinitionArrayDeserializer(result) {
    return result.map((item) => {
        return messageAttachmentToolDefinitionDeserializer(item);
    });
}
function messageAttachmentToolDefinitionSerializer(item) {
    return item;
}
function messageAttachmentToolDefinitionDeserializer(item) {
    return item;
}
function _messageAttachmentToolSerializer(item) {
    return item;
}
function _messageAttachmentToolDeserializer(item) {
    return item;
}
function updateToolResourcesOptionsSerializer(item) {
    return {
        code_interpreter: !item["codeInterpreter"]
            ? item["codeInterpreter"]
            : updateCodeInterpreterToolResourceOptionsSerializer(item["codeInterpreter"]),
        file_search: !item["fileSearch"]
            ? item["fileSearch"]
            : updateFileSearchToolResourceOptionsSerializer(item["fileSearch"]),
        azure_ai_search: !item["azureAISearch"]
            ? item["azureAISearch"]
            : azureAISearchResourceSerializer(item["azureAISearch"]),
    };
}
function updateToolResourcesOptionsDeserializer(item) {
    return {
        codeInterpreter: !item["code_interpreter"]
            ? item["code_interpreter"]
            : updateCodeInterpreterToolResourceOptionsDeserializer(item["code_interpreter"]),
        fileSearch: !item["file_search"]
            ? item["file_search"]
            : updateFileSearchToolResourceOptionsDeserializer(item["file_search"]),
        azureAISearch: !item["azure_ai_search"]
            ? item["azure_ai_search"]
            : azureAISearchResourceDeserializer(item["azure_ai_search"]),
    };
}
function updateCodeInterpreterToolResourceOptionsSerializer(item) {
    return {
        file_ids: !item["fileIds"]
            ? item["fileIds"]
            : item["fileIds"].map((p) => {
                return p;
            }),
    };
}
function updateCodeInterpreterToolResourceOptionsDeserializer(item) {
    return {
        fileIds: !item["file_ids"]
            ? item["file_ids"]
            : item["file_ids"].map((p) => {
                return p;
            }),
    };
}
function updateFileSearchToolResourceOptionsSerializer(item) {
    return {
        vector_store_ids: !item["vectorStoreIds"]
            ? item["vectorStoreIds"]
            : item["vectorStoreIds"].map((p) => {
                return p;
            }),
    };
}
function updateFileSearchToolResourceOptionsDeserializer(item) {
    return {
        vectorStoreIds: !item["vector_store_ids"]
            ? item["vector_store_ids"]
            : item["vector_store_ids"].map((p) => {
                return p;
            }),
    };
}
function truncationObjectSerializer(item) {
    return { type: item["type"], last_messages: item["lastMessages"] };
}
function truncationObjectDeserializer(item) {
    return {
        type: item["type"],
        lastMessages: item["last_messages"],
    };
}
function agentsNamedToolChoiceSerializer(item) {
    return {
        type: item["type"],
        function: !item["function"] ? item["function"] : functionNameSerializer(item["function"]),
    };
}
function agentsNamedToolChoiceDeserializer(item) {
    return {
        type: item["type"],
        function: !item["function"] ? item["function"] : functionNameDeserializer(item["function"]),
    };
}
function functionNameSerializer(item) {
    return { name: item["name"] };
}
function functionNameDeserializer(item) {
    return {
        name: item["name"],
    };
}
function agentsToolChoiceOptionSerializer(item) {
    return item;
}
function agentsToolChoiceOptionDeserializer(item) {
    return item;
}
function threadRunDeserializer(item) {
    return {
        id: item["id"],
        object: item["object"],
        threadId: item["thread_id"],
        assistantId: item["assistant_id"],
        status: item["status"],
        requiredAction: !item["required_action"]
            ? item["required_action"]
            : requiredActionUnionDeserializer(item["required_action"]),
        lastError: !item["last_error"] ? item["last_error"] : runErrorDeserializer(item["last_error"]),
        model: item["model"],
        instructions: item["instructions"],
        tools: toolDefinitionUnionArrayDeserializer(item["tools"]),
        createdAt: new Date(item["created_at"] * 1000),
        expiresAt: !item["expires_at"] ? item["expires_at"] : new Date(item["expires_at"] * 1000),
        startedAt: !item["started_at"] ? item["started_at"] : new Date(item["started_at"] * 1000),
        completedAt: !item["completed_at"]
            ? item["completed_at"]
            : new Date(item["completed_at"] * 1000),
        cancelledAt: !item["cancelled_at"]
            ? item["cancelled_at"]
            : new Date(item["cancelled_at"] * 1000),
        failedAt: !item["failed_at"] ? item["failed_at"] : new Date(item["failed_at"] * 1000),
        incompleteDetails: !item["incomplete_details"]
            ? item["incomplete_details"]
            : incompleteRunDetailsDeserializer(item["incomplete_details"]),
        usage: !item["usage"] ? item["usage"] : runCompletionUsageDeserializer(item["usage"]),
        temperature: item["temperature"],
        topP: item["top_p"],
        maxPromptTokens: item["max_prompt_tokens"],
        maxCompletionTokens: item["max_completion_tokens"],
        truncationStrategy: !item["truncation_strategy"]
            ? item["truncation_strategy"]
            : truncationObjectDeserializer(item["truncation_strategy"]),
        toolChoice: !item["tool_choice"]
            ? item["tool_choice"]
            : agentsToolChoiceOptionDeserializer(item["tool_choice"]),
        responseFormat: !item["response_format"]
            ? item["response_format"]
            : agentsResponseFormatOptionDeserializer(item["response_format"]),
        metadata: item["metadata"],
        toolResources: !item["tool_resources"]
            ? item["tool_resources"]
            : updateToolResourcesOptionsDeserializer(item["tool_resources"]),
        parallelToolCalls: item["parallel_tool_calls"],
    };
}
function requiredActionDeserializer(item) {
    return {
        type: item["type"],
    };
}
function requiredActionUnionDeserializer(item) {
    switch (item.type) {
        case "submit_tool_outputs":
            return submitToolOutputsActionDeserializer(item);
        default:
            return requiredActionDeserializer(item);
    }
}
function submitToolOutputsActionDeserializer(item) {
    return {
        type: item["type"],
        submitToolOutputs: submitToolOutputsDetailsDeserializer(item["submit_tool_outputs"]),
    };
}
function submitToolOutputsDetailsDeserializer(item) {
    return {
        toolCalls: requiredToolCallUnionArrayDeserializer(item["tool_calls"]),
    };
}
function requiredToolCallUnionArrayDeserializer(result) {
    return result.map((item) => {
        return requiredToolCallUnionDeserializer(item);
    });
}
function requiredToolCallDeserializer(item) {
    return {
        type: item["type"],
        id: item["id"],
    };
}
function requiredToolCallUnionDeserializer(item) {
    switch (item.type) {
        case "function":
            return requiredFunctionToolCallDeserializer(item);
        default:
            return requiredToolCallDeserializer(item);
    }
}
function requiredFunctionToolCallDeserializer(item) {
    return {
        type: item["type"],
        id: item["id"],
        function: requiredFunctionToolCallDetailsDeserializer(item["function"]),
    };
}
function requiredFunctionToolCallDetailsDeserializer(item) {
    return {
        name: item["name"],
        arguments: item["arguments"],
    };
}
function runErrorDeserializer(item) {
    return {
        code: item["code"],
        message: item["message"],
    };
}
function incompleteRunDetailsDeserializer(item) {
    return {
        reason: item["reason"],
    };
}
function runCompletionUsageDeserializer(item) {
    return {
        completionTokens: item["completion_tokens"],
        promptTokens: item["prompt_tokens"],
        totalTokens: item["total_tokens"],
    };
}
function agentThreadDeserializer(item) {
    return {
        id: item["id"],
        object: item["object"],
        createdAt: new Date(item["created_at"] * 1000),
        toolResources: !item["tool_resources"]
            ? item["tool_resources"]
            : toolResourcesDeserializer(item["tool_resources"]),
        metadata: item["metadata"],
    };
}
function _agentsPagedResultAgentThreadDeserializer(item) {
    return {
        data: agentThreadArrayDeserializer(item["data"]),
        lastId: item["last_id"],
        hasMore: item["has_more"],
    };
}
function agentThreadArrayDeserializer(result) {
    return result.map((item) => {
        return agentThreadDeserializer(item);
    });
}
function threadDeletionStatusDeserializer(item) {
    return {
        id: item["id"],
        deleted: item["deleted"],
        object: item["object"],
    };
}
function threadMessageDeserializer(item) {
    return {
        id: item["id"],
        object: item["object"],
        createdAt: new Date(item["created_at"] * 1000),
        threadId: item["thread_id"],
        status: item["status"],
        incompleteDetails: !item["incomplete_details"]
            ? item["incomplete_details"]
            : messageIncompleteDetailsDeserializer(item["incomplete_details"]),
        completedAt: !item["completed_at"]
            ? item["completed_at"]
            : new Date(item["completed_at"] * 1000),
        incompleteAt: !item["incomplete_at"]
            ? item["incomplete_at"]
            : new Date(item["incomplete_at"] * 1000),
        role: item["role"],
        content: messageContentUnionArrayDeserializer(item["content"]),
        assistantId: item["assistant_id"],
        runId: item["run_id"],
        attachments: !item["attachments"]
            ? item["attachments"]
            : messageAttachmentArrayDeserializer(item["attachments"]),
        metadata: item["metadata"],
    };
}
function messageIncompleteDetailsDeserializer(item) {
    return {
        reason: item["reason"],
    };
}
function messageContentUnionArrayDeserializer(result) {
    return result.map((item) => {
        return messageContentUnionDeserializer(item);
    });
}
function messageContentDeserializer(item) {
    return {
        type: item["type"],
    };
}
function messageContentUnionDeserializer(item) {
    switch (item.type) {
        case "text":
            return messageTextContentDeserializer(item);
        case "image_file":
            return messageImageFileContentDeserializer(item);
        default:
            return messageContentDeserializer(item);
    }
}
function messageTextContentDeserializer(item) {
    return {
        type: item["type"],
        text: messageTextDetailsDeserializer(item["text"]),
    };
}
function messageTextDetailsDeserializer(item) {
    return {
        value: item["value"],
        annotations: messageTextAnnotationUnionArrayDeserializer(item["annotations"]),
    };
}
function messageTextAnnotationUnionArrayDeserializer(result) {
    return result.map((item) => {
        return messageTextAnnotationUnionDeserializer(item);
    });
}
function messageTextAnnotationDeserializer(item) {
    return {
        type: item["type"],
        text: item["text"],
    };
}
function messageTextAnnotationUnionDeserializer(item) {
    switch (item.type) {
        case "url_citation":
            return messageTextUrlCitationAnnotationDeserializer(item);
        case "file_citation":
            return messageTextFileCitationAnnotationDeserializer(item);
        case "file_path":
            return messageTextFilePathAnnotationDeserializer(item);
        default:
            return messageTextAnnotationDeserializer(item);
    }
}
function messageTextUrlCitationAnnotationDeserializer(item) {
    return {
        type: item["type"],
        text: item["text"],
        urlCitation: messageTextUrlCitationDetailsDeserializer(item["url_citation"]),
        startIndex: item["start_index"],
        endIndex: item["end_index"],
    };
}
function messageTextUrlCitationDetailsDeserializer(item) {
    return {
        url: item["url"],
        title: item["title"],
    };
}
function messageTextFileCitationAnnotationDeserializer(item) {
    return {
        type: item["type"],
        text: item["text"],
        fileCitation: messageTextFileCitationDetailsDeserializer(item["file_citation"]),
        startIndex: item["start_index"],
        endIndex: item["end_index"],
    };
}
function messageTextFileCitationDetailsDeserializer(item) {
    return {
        fileId: item["file_id"],
        quote: item["quote"],
    };
}
function messageTextFilePathAnnotationDeserializer(item) {
    return {
        type: item["type"],
        text: item["text"],
        filePath: messageTextFilePathDetailsDeserializer(item["file_path"]),
        startIndex: item["start_index"],
        endIndex: item["end_index"],
    };
}
function messageTextFilePathDetailsDeserializer(item) {
    return {
        fileId: item["file_id"],
    };
}
function messageImageFileContentDeserializer(item) {
    return {
        type: item["type"],
        imageFile: messageImageFileDetailsDeserializer(item["image_file"]),
    };
}
function messageImageFileDetailsDeserializer(item) {
    return {
        fileId: item["file_id"],
    };
}
function _agentsPagedResultThreadMessageDeserializer(item) {
    return {
        data: threadMessageArrayDeserializer(item["data"]),
        lastId: item["last_id"],
        hasMore: item["has_more"],
    };
}
function threadMessageArrayDeserializer(result) {
    return result.map((item) => {
        return threadMessageDeserializer(item);
    });
}
function _agentsPagedResultThreadRunDeserializer(item) {
    return {
        data: threadRunArrayDeserializer(item["data"]),
        lastId: item["last_id"],
        hasMore: item["has_more"],
    };
}
function threadRunArrayDeserializer(result) {
    return result.map((item) => {
        return threadRunDeserializer(item);
    });
}
function toolOutputSerializer(item) {
    return { tool_call_id: item["toolCallId"], output: item["output"] };
}
function toolOutputArraySerializer(result) {
    return result.map((item) => {
        return toolOutputSerializer(item);
    });
}
function runStepDeserializer(item) {
    return {
        id: item["id"],
        object: item["object"],
        type: item["type"],
        assistantId: item["assistant_id"],
        threadId: item["thread_id"],
        runId: item["run_id"],
        status: item["status"],
        stepDetails: runStepDetailsUnionDeserializer(item["step_details"]),
        lastError: !item["last_error"]
            ? item["last_error"]
            : runStepErrorDeserializer(item["last_error"]),
        createdAt: new Date(item["created_at"] * 1000),
        expiredAt: !item["expired_at"] ? item["expired_at"] : new Date(item["expired_at"] * 1000),
        completedAt: !item["completed_at"]
            ? item["completed_at"]
            : new Date(item["completed_at"] * 1000),
        cancelledAt: !item["cancelled_at"]
            ? item["cancelled_at"]
            : new Date(item["cancelled_at"] * 1000),
        failedAt: !item["failed_at"] ? item["failed_at"] : new Date(item["failed_at"] * 1000),
        usage: !item["usage"] ? item["usage"] : runStepCompletionUsageDeserializer(item["usage"]),
        metadata: item["metadata"],
    };
}
function runStepDetailsDeserializer(item) {
    return {
        type: item["type"],
    };
}
function runStepDetailsUnionDeserializer(item) {
    switch (item.type) {
        case "message_creation":
            return runStepMessageCreationDetailsDeserializer(item);
        case "tool_calls":
            return runStepToolCallDetailsDeserializer(item);
        default:
            return runStepDetailsDeserializer(item);
    }
}
function runStepMessageCreationDetailsDeserializer(item) {
    return {
        type: item["type"],
        messageCreation: runStepMessageCreationReferenceDeserializer(item["message_creation"]),
    };
}
function runStepMessageCreationReferenceDeserializer(item) {
    return {
        messageId: item["message_id"],
    };
}
function runStepToolCallDetailsDeserializer(item) {
    return {
        type: item["type"],
        toolCalls: runStepToolCallUnionArrayDeserializer(item["tool_calls"]),
    };
}
function runStepToolCallUnionArrayDeserializer(result) {
    return result.map((item) => {
        return runStepToolCallUnionDeserializer(item);
    });
}
function runStepToolCallDeserializer(item) {
    return {
        type: item["type"],
        id: item["id"],
    };
}
function runStepToolCallUnionDeserializer(item) {
    switch (item.type) {
        case "code_interpreter":
            return runStepCodeInterpreterToolCallDeserializer(item);
        case "file_search":
            return runStepFileSearchToolCallDeserializer(item);
        case "bing_grounding":
            return runStepBingGroundingToolCallDeserializer(item);
        case "azure_ai_search":
            return runStepAzureAISearchToolCallDeserializer(item);
        case "sharepoint_grounding":
            return runStepSharepointToolCallDeserializer(item);
        case "fabric_dataagent":
            return runStepMicrosoftFabricToolCallDeserializer(item);
        case "bing_custom_search":
            return runStepBingCustomSearchToolCallDeserializer(item);
        case "function":
            return runStepFunctionToolCallDeserializer(item);
        case "openapi":
            return runStepOpenAPIToolCallDeserializer(item);
        default:
            return runStepToolCallDeserializer(item);
    }
}
function runStepCodeInterpreterToolCallDeserializer(item) {
    return {
        type: item["type"],
        id: item["id"],
        codeInterpreter: runStepCodeInterpreterToolCallDetailsDeserializer(item["code_interpreter"]),
    };
}
function runStepCodeInterpreterToolCallDetailsDeserializer(item) {
    return {
        input: item["input"],
        outputs: runStepCodeInterpreterToolCallOutputUnionArrayDeserializer(item["outputs"]),
    };
}
function runStepCodeInterpreterToolCallOutputUnionArrayDeserializer(result) {
    return result.map((item) => {
        return runStepCodeInterpreterToolCallOutputUnionDeserializer(item);
    });
}
function runStepCodeInterpreterToolCallOutputDeserializer(item) {
    return {
        type: item["type"],
    };
}
function runStepCodeInterpreterToolCallOutputUnionDeserializer(item) {
    switch (item.type) {
        case "logs":
            return runStepCodeInterpreterLogOutputDeserializer(item);
        case "image":
            return runStepCodeInterpreterImageOutputDeserializer(item);
        default:
            return runStepCodeInterpreterToolCallOutputDeserializer(item);
    }
}
function runStepCodeInterpreterLogOutputDeserializer(item) {
    return {
        type: item["type"],
        logs: item["logs"],
    };
}
function runStepCodeInterpreterImageOutputDeserializer(item) {
    return {
        type: item["type"],
        image: runStepCodeInterpreterImageReferenceDeserializer(item["image"]),
    };
}
function runStepCodeInterpreterImageReferenceDeserializer(item) {
    return {
        fileId: item["file_id"],
    };
}
function runStepFileSearchToolCallDeserializer(item) {
    return {
        type: item["type"],
        id: item["id"],
        fileSearch: runStepFileSearchToolCallResultsDeserializer(item["file_search"]),
    };
}
function runStepFileSearchToolCallResultsDeserializer(item) {
    return {
        rankingOptions: !item["ranking_options"]
            ? item["ranking_options"]
            : fileSearchRankingOptionsDeserializer(item["ranking_options"]),
        results: runStepFileSearchToolCallResultArrayDeserializer(item["results"]),
    };
}
function runStepFileSearchToolCallResultArrayDeserializer(result) {
    return result.map((item) => {
        return runStepFileSearchToolCallResultDeserializer(item);
    });
}
function runStepFileSearchToolCallResultDeserializer(item) {
    return {
        fileId: item["file_id"],
        fileName: item["file_name"],
        score: item["score"],
        content: !item["content"]
            ? item["content"]
            : fileSearchToolCallContentArrayDeserializer(item["content"]),
    };
}
function fileSearchToolCallContentArrayDeserializer(result) {
    return result.map((item) => {
        return fileSearchToolCallContentDeserializer(item);
    });
}
function fileSearchToolCallContentDeserializer(item) {
    return {
        type: item["type"],
        text: item["text"],
    };
}
function runStepBingGroundingToolCallDeserializer(item) {
    return {
        type: item["type"],
        id: item["id"],
        bingGrounding: item["bing_grounding"],
    };
}
function runStepAzureAISearchToolCallDeserializer(item) {
    return {
        type: item["type"],
        id: item["id"],
        azureAISearch: item["azure_ai_search"],
    };
}
function runStepSharepointToolCallDeserializer(item) {
    return {
        type: item["type"],
        id: item["id"],
        sharePoint: item["sharepoint_grounding"],
    };
}
function runStepMicrosoftFabricToolCallDeserializer(item) {
    return {
        type: item["type"],
        id: item["id"],
        microsoftFabric: item["fabric_dataagent"],
    };
}
function runStepBingCustomSearchToolCallDeserializer(item) {
    return {
        type: item["type"],
        id: item["id"],
        bingCustomSearch: item["bing_custom_search"],
    };
}
function runStepFunctionToolCallDeserializer(item) {
    return {
        type: item["type"],
        id: item["id"],
        function: runStepFunctionToolCallDetailsDeserializer(item["function"]),
    };
}
function runStepFunctionToolCallDetailsDeserializer(item) {
    return {
        name: item["name"],
        arguments: item["arguments"],
    };
}
function runStepOpenAPIToolCallDeserializer(item) {
    return {
        type: item["type"],
        id: item["id"],
        openAPI: item["openapi"],
    };
}
function runStepErrorDeserializer(item) {
    return {
        code: item["code"],
        message: item["message"],
    };
}
function runStepCompletionUsageDeserializer(item) {
    return {
        completionTokens: item["completion_tokens"],
        promptTokens: item["prompt_tokens"],
        totalTokens: item["total_tokens"],
    };
}
function _agentsPagedResultRunStepDeserializer(item) {
    return {
        data: runStepArrayDeserializer(item["data"]),
        lastId: item["last_id"],
        hasMore: item["has_more"],
    };
}
function runStepArrayDeserializer(result) {
    return result.map((item) => {
        return runStepDeserializer(item);
    });
}
function fileListResponseDeserializer(item) {
    return {
        object: item["object"],
        data: fileInfoArrayDeserializer(item["data"]),
    };
}
function fileInfoArrayDeserializer(result) {
    return result.map((item) => {
        return fileInfoDeserializer(item);
    });
}
function fileInfoDeserializer(item) {
    return {
        object: item["object"],
        id: item["id"],
        bytes: item["bytes"],
        filename: item["filename"],
        createdAt: new Date(item["created_at"] * 1000),
        purpose: item["purpose"],
        status: item["status"],
        statusDetails: item["status_details"],
    };
}
function _uploadFileRequestSerializer(item) {
    var _a;
    return [
        { name: "file", body: item["file"], filename: (_a = item["filename"]) !== null && _a !== void 0 ? _a : (0, core_util_1.randomUUID)() },
        { name: "purpose", body: item["purpose"] },
    ];
}
function fileDeletionStatusDeserializer(item) {
    return {
        id: item["id"],
        deleted: item["deleted"],
        object: item["object"],
    };
}
function _agentsPagedResultVectorStoreDeserializer(item) {
    return {
        data: vectorStoreArrayDeserializer(item["data"]),
        lastId: item["last_id"],
        hasMore: item["has_more"],
    };
}
function vectorStoreArrayDeserializer(result) {
    return result.map((item) => {
        return vectorStoreDeserializer(item);
    });
}
function vectorStoreDeserializer(item) {
    return {
        id: item["id"],
        object: item["object"],
        createdAt: new Date(item["created_at"] * 1000),
        name: item["name"],
        usageBytes: item["usage_bytes"],
        fileCounts: vectorStoreFileCountDeserializer(item["file_counts"]),
        status: item["status"],
        expiresAfter: !item["expires_after"]
            ? item["expires_after"]
            : vectorStoreExpirationPolicyDeserializer(item["expires_after"]),
        expiresAt: !item["expires_at"] ? item["expires_at"] : new Date(item["expires_at"] * 1000),
        lastActiveAt: !item["last_active_at"]
            ? item["last_active_at"]
            : new Date(item["last_active_at"] * 1000),
        metadata: item["metadata"],
    };
}
function vectorStoreFileCountDeserializer(item) {
    return {
        inProgress: item["in_progress"],
        completed: item["completed"],
        failed: item["failed"],
        cancelled: item["cancelled"],
        total: item["total"],
    };
}
function vectorStoreExpirationPolicySerializer(item) {
    return { anchor: item["anchor"], days: item["days"] };
}
function vectorStoreExpirationPolicyDeserializer(item) {
    return {
        anchor: item["anchor"],
        days: item["days"],
    };
}
function vectorStoreChunkingStrategyRequestSerializer(item) {
    return { type: item["type"] };
}
function vectorStoreChunkingStrategyRequestUnionSerializer(item) {
    switch (item.type) {
        case "auto":
            return vectorStoreAutoChunkingStrategyRequestSerializer(item);
        case "static":
            return vectorStoreStaticChunkingStrategyRequestSerializer(item);
        default:
            return vectorStoreChunkingStrategyRequestSerializer(item);
    }
}
function vectorStoreAutoChunkingStrategyRequestSerializer(item) {
    return { type: item["type"] };
}
function vectorStoreStaticChunkingStrategyRequestSerializer(item) {
    return {
        type: item["type"],
        static: vectorStoreStaticChunkingStrategyOptionsSerializer(item["static"]),
    };
}
function vectorStoreStaticChunkingStrategyOptionsSerializer(item) {
    return {
        max_chunk_size_tokens: item["maxChunkSizeTokens"],
        chunk_overlap_tokens: item["chunkOverlapTokens"],
    };
}
function vectorStoreStaticChunkingStrategyOptionsDeserializer(item) {
    return {
        maxChunkSizeTokens: item["max_chunk_size_tokens"],
        chunkOverlapTokens: item["chunk_overlap_tokens"],
    };
}
function vectorStoreDeletionStatusDeserializer(item) {
    return {
        id: item["id"],
        deleted: item["deleted"],
        object: item["object"],
    };
}
function _agentsPagedResultVectorStoreFileDeserializer(item) {
    return {
        data: vectorStoreFileArrayDeserializer(item["data"]),
        lastId: item["last_id"],
        hasMore: item["has_more"],
    };
}
function vectorStoreFileArrayDeserializer(result) {
    return result.map((item) => {
        return vectorStoreFileDeserializer(item);
    });
}
function vectorStoreFileDeserializer(item) {
    return {
        id: item["id"],
        object: item["object"],
        usageBytes: item["usage_bytes"],
        createdAt: new Date(item["created_at"] * 1000),
        vectorStoreId: item["vector_store_id"],
        status: item["status"],
        lastError: !item["last_error"]
            ? item["last_error"]
            : vectorStoreFileErrorDeserializer(item["last_error"]),
        chunkingStrategy: !item["chunking_strategy"]
            ? item["chunking_strategy"]
            : vectorStoreChunkingStrategyResponseUnionDeserializer(item["chunking_strategy"]),
    };
}
function vectorStoreFileErrorDeserializer(item) {
    return {
        code: item["code"],
        message: item["message"],
    };
}
function vectorStoreChunkingStrategyResponseDeserializer(item) {
    return {
        type: item["type"],
    };
}
function vectorStoreChunkingStrategyResponseUnionDeserializer(item) {
    switch (item.type) {
        case "other":
            return vectorStoreAutoChunkingStrategyResponseDeserializer(item);
        case "static":
            return vectorStoreStaticChunkingStrategyResponseDeserializer(item);
        default:
            return vectorStoreChunkingStrategyResponseDeserializer(item);
    }
}
function vectorStoreAutoChunkingStrategyResponseDeserializer(item) {
    return {
        type: item["type"],
    };
}
function vectorStoreStaticChunkingStrategyResponseDeserializer(item) {
    return {
        type: item["type"],
        static: vectorStoreStaticChunkingStrategyOptionsDeserializer(item["static"]),
    };
}
function vectorStoreFileDeletionStatusDeserializer(item) {
    return {
        id: item["id"],
        deleted: item["deleted"],
        object: item["object"],
    };
}
function vectorStoreFileBatchDeserializer(item) {
    return {
        id: item["id"],
        object: item["object"],
        createdAt: new Date(item["created_at"] * 1000),
        vectorStoreId: item["vector_store_id"],
        status: item["status"],
        fileCounts: vectorStoreFileCountDeserializer(item["file_counts"]),
    };
}
function messageDeltaChunkDeserializer(item) {
    return {
        id: item["id"],
        object: item["object"],
        delta: messageDeltaDeserializer(item["delta"]),
    };
}
function messageDeltaDeserializer(item) {
    return {
        role: item["role"],
        content: messageDeltaContentUnionArrayDeserializer(item["content"]),
    };
}
function messageDeltaContentUnionArrayDeserializer(result) {
    return result.map((item) => {
        return messageDeltaContentUnionDeserializer(item);
    });
}
function messageDeltaContentDeserializer(item) {
    return {
        index: item["index"],
        type: item["type"],
    };
}
function messageDeltaContentUnionDeserializer(item) {
    switch (item.type) {
        case "image_file":
            return messageDeltaImageFileContentDeserializer(item);
        case "text":
            return messageDeltaTextContentDeserializer(item);
        default:
            return messageDeltaContentDeserializer(item);
    }
}
function messageDeltaImageFileContentDeserializer(item) {
    return {
        index: item["index"],
        type: item["type"],
        imageFile: !item["image_file"]
            ? item["image_file"]
            : messageDeltaImageFileContentObjectDeserializer(item["image_file"]),
    };
}
function messageDeltaImageFileContentObjectDeserializer(item) {
    return {
        fileId: item["file_id"],
    };
}
function messageDeltaTextContentDeserializer(item) {
    return {
        index: item["index"],
        type: item["type"],
        text: !item["text"] ? item["text"] : messageDeltaTextContentObjectDeserializer(item["text"]),
    };
}
function messageDeltaTextContentObjectDeserializer(item) {
    return {
        value: item["value"],
        annotations: !item["annotations"]
            ? item["annotations"]
            : messageDeltaTextAnnotationUnionArrayDeserializer(item["annotations"]),
    };
}
function messageDeltaTextAnnotationUnionArrayDeserializer(result) {
    return result.map((item) => {
        return messageDeltaTextAnnotationUnionDeserializer(item);
    });
}
function messageDeltaTextAnnotationDeserializer(item) {
    return {
        index: item["index"],
        type: item["type"],
    };
}
function messageDeltaTextAnnotationUnionDeserializer(item) {
    switch (item.type) {
        case "url_citation":
            return messageDeltaTextUrlCitationAnnotationDeserializer(item);
        case "file_citation":
            return messageDeltaTextFileCitationAnnotationDeserializer(item);
        case "file_path":
            return messageDeltaTextFilePathAnnotationDeserializer(item);
        default:
            return messageDeltaTextAnnotationDeserializer(item);
    }
}
function messageDeltaTextUrlCitationAnnotationDeserializer(item) {
    return {
        index: item["index"],
        type: item["type"],
        urlCitation: messageDeltaTextUrlCitationDetailsDeserializer(item["url_citation"]),
        startIndex: item["start_index"],
        endIndex: item["end_index"],
    };
}
function messageDeltaTextUrlCitationDetailsDeserializer(item) {
    return {
        url: item["url"],
        title: item["title"],
    };
}
function messageDeltaTextFileCitationAnnotationDeserializer(item) {
    return {
        index: item["index"],
        type: item["type"],
        fileCitation: !item["file_citation"]
            ? item["file_citation"]
            : messageDeltaTextFileCitationAnnotationObjectDeserializer(item["file_citation"]),
        text: item["text"],
        startIndex: item["start_index"],
        endIndex: item["end_index"],
    };
}
function messageDeltaTextFileCitationAnnotationObjectDeserializer(item) {
    return {
        fileId: item["file_id"],
        quote: item["quote"],
    };
}
function messageDeltaTextFilePathAnnotationDeserializer(item) {
    return {
        index: item["index"],
        type: item["type"],
        filePath: !item["file_path"]
            ? item["file_path"]
            : messageDeltaTextFilePathAnnotationObjectDeserializer(item["file_path"]),
        startIndex: item["start_index"],
        endIndex: item["end_index"],
        text: item["text"],
    };
}
function messageDeltaTextFilePathAnnotationObjectDeserializer(item) {
    return {
        fileId: item["file_id"],
    };
}
function runStepDeltaChunkDeserializer(item) {
    return {
        id: item["id"],
        object: item["object"],
        delta: runStepDeltaDeserializer(item["delta"]),
    };
}
function runStepDeltaDeserializer(item) {
    return {
        stepDetails: !item["step_details"]
            ? item["step_details"]
            : runStepDeltaDetailUnionDeserializer(item["step_details"]),
    };
}
function runStepDeltaDetailDeserializer(item) {
    return {
        type: item["type"],
    };
}
function runStepDeltaDetailUnionDeserializer(item) {
    switch (item.type) {
        case "message_creation":
            return runStepDeltaMessageCreationDeserializer(item);
        case "tool_calls":
            return runStepDeltaToolCallObjectDeserializer(item);
        default:
            return runStepDeltaDetailDeserializer(item);
    }
}
function runStepDeltaMessageCreationDeserializer(item) {
    return {
        type: item["type"],
        messageCreation: !item["message_creation"]
            ? item["message_creation"]
            : runStepDeltaMessageCreationObjectDeserializer(item["message_creation"]),
    };
}
function runStepDeltaMessageCreationObjectDeserializer(item) {
    return {
        messageId: item["message_id"],
    };
}
function runStepDeltaToolCallObjectDeserializer(item) {
    return {
        type: item["type"],
        toolCalls: !item["tool_calls"]
            ? item["tool_calls"]
            : runStepDeltaToolCallUnionArrayDeserializer(item["tool_calls"]),
    };
}
function runStepDeltaToolCallUnionArrayDeserializer(result) {
    return result.map((item) => {
        return runStepDeltaToolCallUnionDeserializer(item);
    });
}
function runStepDeltaToolCallDeserializer(item) {
    return {
        index: item["index"],
        id: item["id"],
        type: item["type"],
    };
}
function runStepDeltaToolCallUnionDeserializer(item) {
    switch (item.type) {
        case "function":
            return runStepDeltaFunctionToolCallDeserializer(item);
        case "file_search":
            return runStepDeltaFileSearchToolCallDeserializer(item);
        case "code_interpreter":
            return runStepDeltaCodeInterpreterToolCallDeserializer(item);
        default:
            return runStepDeltaToolCallDeserializer(item);
    }
}
function runStepDeltaFunctionToolCallDeserializer(item) {
    return {
        index: item["index"],
        id: item["id"],
        type: item["type"],
        function: !item["function"]
            ? item["function"]
            : runStepDeltaFunctionDeserializer(item["function"]),
    };
}
function runStepDeltaFunctionDeserializer(item) {
    return {
        name: item["name"],
        arguments: item["arguments"],
        output: item["output"],
    };
}
function runStepDeltaFileSearchToolCallDeserializer(item) {
    return {
        index: item["index"],
        id: item["id"],
        type: item["type"],
        fileSearch: !item["file_search"]
            ? item["file_search"]
            : runStepFileSearchToolCallResultsDeserializer(item["file_search"]),
    };
}
function runStepDeltaCodeInterpreterToolCallDeserializer(item) {
    return {
        index: item["index"],
        id: item["id"],
        type: item["type"],
        codeInterpreter: !item["code_interpreter"]
            ? item["code_interpreter"]
            : runStepDeltaCodeInterpreterDetailItemObjectDeserializer(item["code_interpreter"]),
    };
}
function runStepDeltaCodeInterpreterDetailItemObjectDeserializer(item) {
    return {
        input: item["input"],
        outputs: !item["outputs"]
            ? item["outputs"]
            : runStepDeltaCodeInterpreterOutputUnionArrayDeserializer(item["outputs"]),
    };
}
function runStepDeltaCodeInterpreterOutputUnionArrayDeserializer(result) {
    return result.map((item) => {
        return runStepDeltaCodeInterpreterOutputUnionDeserializer(item);
    });
}
function runStepDeltaCodeInterpreterOutputDeserializer(item) {
    return {
        index: item["index"],
        type: item["type"],
    };
}
function runStepDeltaCodeInterpreterOutputUnionDeserializer(item) {
    switch (item.type) {
        case "logs":
            return runStepDeltaCodeInterpreterLogOutputDeserializer(item);
        case "image":
            return runStepDeltaCodeInterpreterImageOutputDeserializer(item);
        default:
            return runStepDeltaCodeInterpreterOutputDeserializer(item);
    }
}
function runStepDeltaCodeInterpreterLogOutputDeserializer(item) {
    return {
        index: item["index"],
        type: item["type"],
        logs: item["logs"],
    };
}
function runStepDeltaCodeInterpreterImageOutputDeserializer(item) {
    return {
        index: item["index"],
        type: item["type"],
        image: !item["image"]
            ? item["image"]
            : runStepDeltaCodeInterpreterImageOutputObjectDeserializer(item["image"]),
    };
}
function runStepDeltaCodeInterpreterImageOutputObjectDeserializer(item) {
    return {
        fileId: item["file_id"],
    };
}
function agentStreamEventDeserializer(item) {
    return item;
}
/** Thread operation related streaming events */
var ThreadStreamEvent;
(function (ThreadStreamEvent) {
    /** Event emitted when a thread is created */
    ThreadStreamEvent["Created"] = "thread.created";
})(ThreadStreamEvent || (exports.ThreadStreamEvent = ThreadStreamEvent = {}));
/** Run operation related streaming events */
var RunStreamEvent;
(function (RunStreamEvent) {
    /** Event emitted when a run is created */
    RunStreamEvent["ThreadRunCreated"] = "thread.run.created";
    /** Event emitted when a run is queued */
    RunStreamEvent["ThreadRunQueued"] = "thread.run.queued";
    /** Event emitted when a run is in progress */
    RunStreamEvent["ThreadRunInProgress"] = "thread.run.in_progress";
    /** Event emitted when a run requires action */
    RunStreamEvent["ThreadRunRequiresAction"] = "thread.run.requires_action";
    /** Event emitted when a run is completed */
    RunStreamEvent["ThreadRunCompleted"] = "thread.run.completed";
    /** Event emitted when a run is incomplete */
    RunStreamEvent["ThreadRunIncomplete"] = "thread.run.incomplete";
    /** Event emitted when a run has failed */
    RunStreamEvent["ThreadRunFailed"] = "thread.run.failed";
    /** Event emitted when a run is being cancelled */
    RunStreamEvent["ThreadRunCancelling"] = "thread.run.cancelling";
    /** Event emitted when a run has been cancelled */
    RunStreamEvent["ThreadRunCancelled"] = "thread.run.cancelled";
    /** Event emitted when a run has expired */
    RunStreamEvent["ThreadRunExpired"] = "thread.run.expired";
})(RunStreamEvent || (exports.RunStreamEvent = RunStreamEvent = {}));
/** Run step operation related streaming events */
var RunStepStreamEvent;
(function (RunStepStreamEvent) {
    /** Event emitted when a run step is created */
    RunStepStreamEvent["ThreadRunStepCreated"] = "thread.run.step.created";
    /** Event emitted when a run step is in progress */
    RunStepStreamEvent["ThreadRunStepInProgress"] = "thread.run.step.in_progress";
    /** Event emitted when a run step delta is received */
    RunStepStreamEvent["ThreadRunStepDelta"] = "thread.run.step.delta";
    /** Event emitted when a run step is completed */
    RunStepStreamEvent["ThreadRunStepCompleted"] = "thread.run.step.completed";
    /** Event emitted when a run step has failed */
    RunStepStreamEvent["ThreadRunStepFailed"] = "thread.run.step.failed";
    /** Event emitted when a run step has been cancelled */
    RunStepStreamEvent["ThreadRunStepCancelled"] = "thread.run.step.cancelled";
    /** Event emitted when a run step has expired */
    RunStepStreamEvent["ThreadRunStepExpired"] = "thread.run.step.expired";
})(RunStepStreamEvent || (exports.RunStepStreamEvent = RunStepStreamEvent = {}));
/** Message operation related streaming events */
var MessageStreamEvent;
(function (MessageStreamEvent) {
    /** Event emitted when a message is created */
    MessageStreamEvent["ThreadMessageCreated"] = "thread.message.created";
    /** Event emitted when a message is in progress */
    MessageStreamEvent["ThreadMessageInProgress"] = "thread.message.in_progress";
    /** Event emitted when a message delta is received */
    MessageStreamEvent["ThreadMessageDelta"] = "thread.message.delta";
    /** Event emitted when a message is completed */
    MessageStreamEvent["ThreadMessageCompleted"] = "thread.message.completed";
    /** Event emitted when a message is incomplete */
    MessageStreamEvent["ThreadMessageIncomplete"] = "thread.message.incomplete";
})(MessageStreamEvent || (exports.MessageStreamEvent = MessageStreamEvent = {}));
/** Terminal event indicating a server side error while streaming. */
var ErrorEvent;
(function (ErrorEvent) {
    /** Server error while streaming */
    ErrorEvent["Error"] = "error";
})(ErrorEvent || (exports.ErrorEvent = ErrorEvent = {}));
/** Terminal event indicating the successful end of a stream. */
var DoneEvent;
(function (DoneEvent) {
    /** Event emitted when a stream has completed successfully */
    DoneEvent["Done"] = "done";
})(DoneEvent || (exports.DoneEvent = DoneEvent = {}));
/** Azure AI Agents API versions */
var KnownVersions;
(function (KnownVersions) {
    /** Azure AI API version 2025-05-15. */
    KnownVersions["_20250515Preview"] = "2025-05-15-preview";
    /** Azure AI API version 2025-05-01. */
    KnownVersions["V20250501"] = "2025-05-01";
    /** Azure AI API version v1. */
    KnownVersions["V1"] = "v1";
})(KnownVersions || (exports.KnownVersions = KnownVersions = {}));
//# sourceMappingURL=models.js.map