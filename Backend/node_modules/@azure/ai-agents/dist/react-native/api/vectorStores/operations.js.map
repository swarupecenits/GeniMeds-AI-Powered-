{"version":3,"file":"operations.js","sourceRoot":"","sources":["../../../../src/api/vectorStores/operations.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { AgentsContext as Client } from \"../index.js\";\nimport {\n  vectorStoreConfigurationSerializer,\n  _AgentsPagedResultVectorStore,\n  _agentsPagedResultVectorStoreDeserializer,\n  VectorStore,\n  vectorStoreDeserializer,\n  vectorStoreExpirationPolicySerializer,\n  vectorStoreChunkingStrategyRequestUnionSerializer,\n  VectorStoreDeletionStatus,\n  vectorStoreDeletionStatusDeserializer,\n} from \"../../models/models.js\";\nimport {\n  VectorStoresDeleteVectorStoreOptionalParams,\n  VectorStoresModifyVectorStoreOptionalParams,\n  VectorStoresGetVectorStoreOptionalParams,\n  VectorStoresCreateVectorStoreOptionalParams,\n  VectorStoresListVectorStoresOptionalParams,\n} from \"./options.js\";\nimport {\n  PagedAsyncIterableIterator,\n  buildPagedAsyncIterator,\n} from \"../../static-helpers/pagingHelpers.js\";\nimport { expandUrlTemplate } from \"../../static-helpers/urlTemplate.js\";\nimport {\n  StreamableMethod,\n  PathUncheckedResponse,\n  createRestError,\n  operationOptionsToRequestParameters,\n} from \"@azure-rest/core-client\";\nimport { PollerLike, OperationState, OperationStatus } from \"@azure/core-lro\";\nimport { createPoller } from \"../poller.js\";\n\nexport function _deleteVectorStoreSend(\n  context: Client,\n  vectorStoreId: string,\n  options: VectorStoresDeleteVectorStoreOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/vector_stores/{vectorStoreId}{?api%2Dversion}\",\n    {\n      vectorStoreId: vectorStoreId,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).delete({\n    ...operationOptionsToRequestParameters(options),\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n  });\n}\n\nexport async function _deleteVectorStoreDeserialize(\n  result: PathUncheckedResponse,\n): Promise<VectorStoreDeletionStatus> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    throw createRestError(result);\n  }\n\n  return vectorStoreDeletionStatusDeserializer(result.body);\n}\n\n/** Deletes the vector store object matching the specified ID. */\nexport async function deleteVectorStore(\n  context: Client,\n  vectorStoreId: string,\n  options: VectorStoresDeleteVectorStoreOptionalParams = { requestOptions: {} },\n): Promise<VectorStoreDeletionStatus> {\n  const result = await _deleteVectorStoreSend(context, vectorStoreId, options);\n  return _deleteVectorStoreDeserialize(result);\n}\n\nexport function _modifyVectorStoreSend(\n  context: Client,\n  vectorStoreId: string,\n  options: VectorStoresModifyVectorStoreOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/vector_stores/{vectorStoreId}{?api%2Dversion}\",\n    {\n      vectorStoreId: vectorStoreId,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).post({\n    ...operationOptionsToRequestParameters(options),\n    contentType: \"application/json\",\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n    body: {\n      name: options?.name,\n      expires_after: !options?.expiresAfter\n        ? options?.expiresAfter\n        : vectorStoreExpirationPolicySerializer(options?.expiresAfter),\n      metadata: options?.metadata,\n    },\n  });\n}\n\nexport async function _modifyVectorStoreDeserialize(\n  result: PathUncheckedResponse,\n): Promise<VectorStore> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    throw createRestError(result);\n  }\n\n  return vectorStoreDeserializer(result.body);\n}\n\n/** Modifies an existing vector store. */\nexport async function modifyVectorStore(\n  context: Client,\n  vectorStoreId: string,\n  options: VectorStoresModifyVectorStoreOptionalParams = { requestOptions: {} },\n): Promise<VectorStore> {\n  const result = await _modifyVectorStoreSend(context, vectorStoreId, options);\n  return _modifyVectorStoreDeserialize(result);\n}\n\nexport function _getVectorStoreSend(\n  context: Client,\n  vectorStoreId: string,\n  options: VectorStoresGetVectorStoreOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/vector_stores/{vectorStoreId}{?api%2Dversion}\",\n    {\n      vectorStoreId: vectorStoreId,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).get({\n    ...operationOptionsToRequestParameters(options),\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n  });\n}\n\nexport async function _getVectorStoreDeserialize(\n  result: PathUncheckedResponse,\n): Promise<VectorStore> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    throw createRestError(result);\n  }\n\n  return vectorStoreDeserializer(result.body);\n}\n\n/** Returns the vector store object matching the specified ID. */\nexport async function getVectorStore(\n  context: Client,\n  vectorStoreId: string,\n  options: VectorStoresGetVectorStoreOptionalParams = { requestOptions: {} },\n): Promise<VectorStore> {\n  const result = await _getVectorStoreSend(context, vectorStoreId, options);\n  return _getVectorStoreDeserialize(result);\n}\n\nexport function _createVectorStoreSend(\n  context: Client,\n  options: VectorStoresCreateVectorStoreOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/vector_stores{?api%2Dversion}\",\n    {\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).post({\n    ...operationOptionsToRequestParameters(options),\n    contentType: \"application/json\",\n    headers: { accept: \"application/json\", ...options.requestOptions?.headers },\n    body: {\n      file_ids: !options?.fileIds\n        ? options?.fileIds\n        : options?.fileIds.map((p: any) => {\n            return p;\n          }),\n      name: options?.name,\n      configuration: !options?.storeConfiguration\n        ? options?.storeConfiguration\n        : vectorStoreConfigurationSerializer(options?.storeConfiguration),\n      expires_after: !options?.expiresAfter\n        ? options?.expiresAfter\n        : vectorStoreExpirationPolicySerializer(options?.expiresAfter),\n      chunking_strategy: !options?.chunkingStrategy\n        ? options?.chunkingStrategy\n        : vectorStoreChunkingStrategyRequestUnionSerializer(options?.chunkingStrategy),\n      metadata: options?.metadata,\n    },\n  });\n}\n\nexport async function _createVectorStoreDeserialize(\n  result: PathUncheckedResponse,\n): Promise<VectorStore> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    throw createRestError(result);\n  }\n\n  return vectorStoreDeserializer(result.body);\n}\n\n/** Creates a vector store. */\nexport async function createVectorStoreInternal(\n  context: Client,\n  options: VectorStoresCreateVectorStoreOptionalParams = { requestOptions: {} },\n): Promise<VectorStore> {\n  const result = await _createVectorStoreSend(context, options);\n  return _createVectorStoreDeserialize(result);\n}\n\n/** Creates a vector store. */\nexport function createVectorStore(\n  context: Client,\n  options: VectorStoresCreateVectorStoreOptionalParams = { requestOptions: {} },\n): PollerLike<OperationState<VectorStore>, VectorStore> {\n  return createPoller<VectorStore>({\n    initOperation: async () => {\n      return createVectorStoreInternal(context, options);\n    },\n    pollOperation: async (currentResult: VectorStore) => {\n      return getVectorStore(context, currentResult.id, options);\n    },\n    getOperationStatus: getLroOperationStatus,\n    intervalInMs: options.pollingOptions?.intervalInMs,\n  });\n}\n\n/**\n * Creates a vector store and poll.\n */\nexport function createVectorStoreAndPoll(\n  context: Client,\n  options: VectorStoresCreateVectorStoreOptionalParams = { requestOptions: {} },\n): PollerLike<OperationState<VectorStore>, VectorStore> {\n  return createPoller<VectorStore>({\n    initOperation: async () => {\n      return createVectorStoreInternal(context, options);\n    },\n    pollOperation: async (currentResult: VectorStore) => {\n      return getVectorStore(context, currentResult.id, options);\n    },\n    getOperationStatus: getLroOperationStatus,\n    intervalInMs: options.pollingOptions?.intervalInMs,\n  });\n}\n\nexport function _listVectorStoresSend(\n  context: Client,\n  options: VectorStoresListVectorStoresOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/vector_stores{?api%2Dversion,limit,order,after,before}\",\n    {\n      \"api%2Dversion\": context.apiVersion,\n      limit: options?.limit,\n      order: options?.order,\n      after: options?.after,\n      before: options?.before,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).get({\n    ...operationOptionsToRequestParameters(options),\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n  });\n}\n\nexport async function _listVectorStoresDeserialize(\n  result: PathUncheckedResponse,\n): Promise<_AgentsPagedResultVectorStore> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    throw createRestError(result);\n  }\n\n  return _agentsPagedResultVectorStoreDeserializer(result.body);\n}\n\n/** Returns a list of vector stores. */\nexport function listVectorStores(\n  context: Client,\n  options: VectorStoresListVectorStoresOptionalParams = { requestOptions: {} },\n): PagedAsyncIterableIterator<VectorStore> {\n  return buildPagedAsyncIterator(\n    context,\n    () => _listVectorStoresSend(context, options),\n    _listVectorStoresDeserialize,\n    [\"200\"],\n    { itemName: \"data\" },\n  );\n}\n\nfunction getLroOperationStatus(result: VectorStore): OperationStatus {\n  switch (result.status) {\n    case \"in_progress\":\n      return \"running\";\n    case \"completed\":\n      return \"succeeded\";\n    case \"expired\":\n      return \"failed\";\n    default:\n      return \"failed\";\n  }\n}\n"]}