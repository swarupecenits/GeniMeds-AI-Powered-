import { AgentsContext as Client } from "../index.js";
import { AgentThread, _AgentsPagedResultAgentThread, ThreadDeletionStatus } from "../../models/models.js";
import { ThreadsDeleteThreadOptionalParams, ThreadsUpdateThreadOptionalParams, ThreadsGetThreadOptionalParams, ThreadsListThreadsOptionalParams, ThreadsCreateThreadOptionalParams } from "./options.js";
import { PagedAsyncIterableIterator } from "../../static-helpers/pagingHelpers.js";
import { StreamableMethod, PathUncheckedResponse } from "@azure-rest/core-client";
export declare function _deleteThreadSend(context: Client, threadId: string, options?: ThreadsDeleteThreadOptionalParams): StreamableMethod;
export declare function _deleteThreadDeserialize(result: PathUncheckedResponse): Promise<ThreadDeletionStatus>;
/** Deletes an existing thread. */
export declare function deleteThread(context: Client, threadId: string, options?: ThreadsDeleteThreadOptionalParams): Promise<ThreadDeletionStatus>;
export declare function _updateThreadSend(context: Client, threadId: string, options?: ThreadsUpdateThreadOptionalParams): StreamableMethod;
export declare function _updateThreadDeserialize(result: PathUncheckedResponse): Promise<AgentThread>;
/** Modifies an existing thread. */
export declare function updateThread(context: Client, threadId: string, options?: ThreadsUpdateThreadOptionalParams): Promise<AgentThread>;
export declare function _getThreadSend(context: Client, threadId: string, options?: ThreadsGetThreadOptionalParams): StreamableMethod;
export declare function _getThreadDeserialize(result: PathUncheckedResponse): Promise<AgentThread>;
/** Gets information about an existing thread. */
export declare function getThread(context: Client, threadId: string, options?: ThreadsGetThreadOptionalParams): Promise<AgentThread>;
export declare function _listThreadsSend(context: Client, options?: ThreadsListThreadsOptionalParams): StreamableMethod;
export declare function _listThreadsDeserialize(result: PathUncheckedResponse): Promise<_AgentsPagedResultAgentThread>;
/** Gets a list of threads that were previously created. */
export declare function listThreads(context: Client, options?: ThreadsListThreadsOptionalParams): PagedAsyncIterableIterator<AgentThread>;
export declare function _createThreadSend(context: Client, options?: ThreadsCreateThreadOptionalParams): StreamableMethod;
export declare function _createThreadDeserialize(result: PathUncheckedResponse): Promise<AgentThread>;
/** Creates a new thread. Threads contain messages and can be run by agents. */
export declare function createThread(context: Client, options?: ThreadsCreateThreadOptionalParams): Promise<AgentThread>;
//# sourceMappingURL=operations.d.ts.map