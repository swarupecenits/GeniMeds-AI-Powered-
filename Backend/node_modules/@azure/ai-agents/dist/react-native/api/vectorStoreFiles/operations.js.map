{"version":3,"file":"operations.js","sourceRoot":"","sources":["../../../../src/api/vectorStoreFiles/operations.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { AgentsContext as Client } from \"../index.js\";\nimport {\n  vectorStoreDataSourceSerializer,\n  vectorStoreChunkingStrategyRequestUnionSerializer,\n  _AgentsPagedResultVectorStoreFile,\n  _agentsPagedResultVectorStoreFileDeserializer,\n  VectorStoreFile,\n  vectorStoreFileDeserializer,\n  VectorStoreFileDeletionStatus,\n  vectorStoreFileDeletionStatusDeserializer,\n} from \"../../models/models.js\";\nimport {\n  VectorStoreFilesDeleteVectorStoreFileOptionalParams,\n  VectorStoreFilesGetVectorStoreFileOptionalParams,\n  VectorStoreFilesCreateVectorStoreFileOptionalParams,\n  VectorStoreFilesListVectorStoreFilesOptionalParams,\n} from \"./options.js\";\nimport {\n  PagedAsyncIterableIterator,\n  buildPagedAsyncIterator,\n} from \"../../static-helpers/pagingHelpers.js\";\nimport { expandUrlTemplate } from \"../../static-helpers/urlTemplate.js\";\nimport {\n  StreamableMethod,\n  PathUncheckedResponse,\n  createRestError,\n  operationOptionsToRequestParameters,\n} from \"@azure-rest/core-client\";\nimport { OperationState, OperationStatus, PollerLike } from \"@azure/core-lro\";\nimport { createPoller } from \"../poller.js\";\n\nexport function _deleteVectorStoreFileSend(\n  context: Client,\n  vectorStoreId: string,\n  fileId: string,\n  options: VectorStoreFilesDeleteVectorStoreFileOptionalParams = {\n    requestOptions: {},\n  },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/vector_stores/{vectorStoreId}/files/{fileId}{?api%2Dversion}\",\n    {\n      vectorStoreId: vectorStoreId,\n      fileId: fileId,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).delete({\n    ...operationOptionsToRequestParameters(options),\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n  });\n}\n\nexport async function _deleteVectorStoreFileDeserialize(\n  result: PathUncheckedResponse,\n): Promise<VectorStoreFileDeletionStatus> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    throw createRestError(result);\n  }\n\n  return vectorStoreFileDeletionStatusDeserializer(result.body);\n}\n\n/** Deletes a vector store file. This removes the file‐to‐store link (does not delete the file itself). */\nexport async function deleteVectorStoreFile(\n  context: Client,\n  vectorStoreId: string,\n  fileId: string,\n  options: VectorStoreFilesDeleteVectorStoreFileOptionalParams = {\n    requestOptions: {},\n  },\n): Promise<VectorStoreFileDeletionStatus> {\n  const result = await _deleteVectorStoreFileSend(context, vectorStoreId, fileId, options);\n  return _deleteVectorStoreFileDeserialize(result);\n}\n\nexport function _getVectorStoreFileSend(\n  context: Client,\n  vectorStoreId: string,\n  fileId: string,\n  options: VectorStoreFilesGetVectorStoreFileOptionalParams = {\n    requestOptions: {},\n  },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/vector_stores/{vectorStoreId}/files/{fileId}{?api%2Dversion}\",\n    {\n      vectorStoreId: vectorStoreId,\n      fileId: fileId,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).get({\n    ...operationOptionsToRequestParameters(options),\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n  });\n}\n\nexport async function _getVectorStoreFileDeserialize(\n  result: PathUncheckedResponse,\n): Promise<VectorStoreFile> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    throw createRestError(result);\n  }\n\n  return vectorStoreFileDeserializer(result.body);\n}\n\n/** Retrieves a vector store file. */\nexport async function getVectorStoreFile(\n  context: Client,\n  vectorStoreId: string,\n  fileId: string,\n  options: VectorStoreFilesGetVectorStoreFileOptionalParams = {\n    requestOptions: {},\n  },\n): Promise<VectorStoreFile> {\n  const result = await _getVectorStoreFileSend(context, vectorStoreId, fileId, options);\n  return _getVectorStoreFileDeserialize(result);\n}\n\nexport function _createVectorStoreFileSend(\n  context: Client,\n  vectorStoreId: string,\n  options: VectorStoreFilesCreateVectorStoreFileOptionalParams = {\n    requestOptions: {},\n  },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/vector_stores/{vectorStoreId}/files{?api%2Dversion}\",\n    {\n      vectorStoreId: vectorStoreId,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).post({\n    ...operationOptionsToRequestParameters(options),\n    contentType: \"application/json\",\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n    body: {\n      file_id: options?.fileId,\n      data_source: !options?.dataSource\n        ? options?.dataSource\n        : vectorStoreDataSourceSerializer(options?.dataSource),\n      chunking_strategy: !options?.chunkingStrategy\n        ? options?.chunkingStrategy\n        : vectorStoreChunkingStrategyRequestUnionSerializer(options?.chunkingStrategy),\n    },\n  });\n}\n\nexport async function _createVectorStoreFileDeserialize(\n  result: PathUncheckedResponse,\n): Promise<VectorStoreFile> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    throw createRestError(result);\n  }\n\n  return vectorStoreFileDeserializer(result.body);\n}\n\n/** Create a vector store file by attaching a file to a vector store. */\nexport async function createVectorStoreFileInternal(\n  context: Client,\n  vectorStoreId: string,\n  options: VectorStoreFilesCreateVectorStoreFileOptionalParams = {\n    requestOptions: {},\n  },\n): Promise<VectorStoreFile> {\n  const result = await _createVectorStoreFileSend(context, vectorStoreId, options);\n  return _createVectorStoreFileDeserialize(result);\n}\n\n/** Create a vector store file by attaching a file to a vector store. */\nexport function createVectorStoreFile(\n  context: Client,\n  vectorStoreId: string,\n  options: VectorStoreFilesCreateVectorStoreFileOptionalParams = { requestOptions: {} },\n): PollerLike<OperationState<VectorStoreFile>, VectorStoreFile> {\n  return createPoller<VectorStoreFile>({\n    initOperation: async () => {\n      return createVectorStoreFileInternal(context, vectorStoreId, options);\n    },\n    pollOperation: async (currentResult: VectorStoreFile) => {\n      return getVectorStoreFile(context, vectorStoreId, currentResult.id, options);\n    },\n    getOperationStatus: getLroOperationStatus,\n    getOperationError: (result: VectorStoreFile) => {\n      return result.status === \"failed\" && result.lastError\n        ? new Error(\n            `Operation failed with code ${result.lastError.code}: ${result.lastError.message}`,\n          )\n        : undefined;\n    },\n    intervalInMs: options.pollingOptions?.intervalInMs,\n  });\n}\n\n/** Create a vector store file by attaching a file to a vector store and poll. */\nexport function createVectorStoreFileAndPoll(\n  context: Client,\n  vectorStoreId: string,\n  options: VectorStoreFilesCreateVectorStoreFileOptionalParams = { requestOptions: {} },\n): PollerLike<OperationState<VectorStoreFile>, VectorStoreFile> {\n  return createPoller<VectorStoreFile>({\n    initOperation: async () => {\n      return createVectorStoreFileInternal(context, vectorStoreId, options);\n    },\n    pollOperation: async (currentResult: VectorStoreFile) => {\n      return getVectorStoreFile(context, vectorStoreId, currentResult.id, options);\n    },\n    getOperationStatus: getLroOperationStatus,\n    getOperationError: (result: VectorStoreFile) => {\n      return result.status === \"failed\" && result.lastError\n        ? new Error(\n            `Operation failed with code ${result.lastError.code}: ${result.lastError.message}`,\n          )\n        : undefined;\n    },\n    intervalInMs: options.pollingOptions?.intervalInMs,\n  });\n}\n\nexport function _listVectorStoreFilesSend(\n  context: Client,\n  vectorStoreId: string,\n  options: VectorStoreFilesListVectorStoreFilesOptionalParams = {\n    requestOptions: {},\n  },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/vector_stores/{vectorStoreId}/files{?filter,api%2Dversion,limit,order,after,before}\",\n    {\n      vectorStoreId: vectorStoreId,\n      filter: options?.filter,\n      \"api%2Dversion\": context.apiVersion,\n      limit: options?.limit,\n      order: options?.order,\n      after: options?.after,\n      before: options?.before,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).get({\n    ...operationOptionsToRequestParameters(options),\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n  });\n}\n\nexport async function _listVectorStoreFilesDeserialize(\n  result: PathUncheckedResponse,\n): Promise<_AgentsPagedResultVectorStoreFile> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    throw createRestError(result);\n  }\n\n  return _agentsPagedResultVectorStoreFileDeserializer(result.body);\n}\n\n/** Returns a list of vector store files. */\nexport function listVectorStoreFiles(\n  context: Client,\n  vectorStoreId: string,\n  options: VectorStoreFilesListVectorStoreFilesOptionalParams = {\n    requestOptions: {},\n  },\n): PagedAsyncIterableIterator<VectorStoreFile> {\n  return buildPagedAsyncIterator(\n    context,\n    () => _listVectorStoreFilesSend(context, vectorStoreId, options),\n    _listVectorStoreFilesDeserialize,\n    [\"200\"],\n    { itemName: \"data\" },\n  );\n}\n\nfunction getLroOperationStatus(result: VectorStoreFile): OperationStatus {\n  switch (result.status) {\n    case \"in_progress\":\n      return \"running\";\n    case \"completed\":\n      return \"succeeded\";\n    case \"cancelled\":\n      return \"canceled\";\n    default:\n      return \"failed\";\n  }\n}\n"]}