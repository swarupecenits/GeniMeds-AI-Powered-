import { AgentsContext } from "../../api/agentsContext.js";
import { VectorStoreFile, VectorStoreFileDeletionStatus } from "../../models/models.js";
import { VectorStoreFilesDeleteVectorStoreFileOptionalParams, VectorStoreFilesGetVectorStoreFileOptionalParams, VectorStoreFilesCreateVectorStoreFileOptionalParams, VectorStoreFilesListVectorStoreFilesOptionalParams } from "../../api/vectorStoreFiles/options.js";
import { OperationState, PollerLike } from "@azure/core-lro";
import { PagedAsyncIterableIterator } from "../../static-helpers/pagingHelpers.js";
/** Interface representing a VectorStoreFiles operations. */
export interface VectorStoreFilesOperations {
    /** Deletes a vector store file. This removes the file‐to‐store link (does not delete the file itself). */
    delete: (vectorStoreId: string, fileId: string, options?: VectorStoreFilesDeleteVectorStoreFileOptionalParams) => Promise<VectorStoreFileDeletionStatus>;
    /** Retrieves a vector store file. */
    get: (vectorStoreId: string, fileId: string, options?: VectorStoreFilesGetVectorStoreFileOptionalParams) => Promise<VectorStoreFile>;
    /** Create a vector store file by attaching a file to a vector store. */
    create: (vectorStoreId: string, options?: VectorStoreFilesCreateVectorStoreFileOptionalParams) => Promise<VectorStoreFile>;
    /** Create a vector store file by attaching a file to a vector store and poll. */
    createAndPoll: (vectorStoreId: string, options?: VectorStoreFilesCreateVectorStoreFileOptionalParams) => PollerLike<OperationState<VectorStoreFile>, VectorStoreFile>;
    /** Returns a list of vector store files. */
    list: (vectorStoreId: string, options?: VectorStoreFilesListVectorStoreFilesOptionalParams) => PagedAsyncIterableIterator<VectorStoreFile>;
}
export declare function _getVectorStoreFilesOperations(context: AgentsContext): VectorStoreFilesOperations;
//# sourceMappingURL=index.d.ts.map