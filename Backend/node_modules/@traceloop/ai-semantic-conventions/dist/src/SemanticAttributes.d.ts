export declare const SpanAttributes: {
    LLM_SYSTEM: string;
    LLM_REQUEST_MODEL: string;
    LLM_REQUEST_MAX_TOKENS: string;
    LLM_REQUEST_TEMPERATURE: string;
    LLM_REQUEST_TOP_P: string;
    LLM_PROMPTS: string;
    LLM_COMPLETIONS: string;
    LLM_RESPONSE_MODEL: string;
    LLM_USAGE_PROMPT_TOKENS: string;
    LLM_USAGE_COMPLETION_TOKENS: string;
    LLM_REQUEST_TYPE: string;
    LLM_USAGE_TOTAL_TOKENS: string;
    LLM_TOP_K: string;
    LLM_FREQUENCY_PENALTY: string;
    LLM_PRESENCE_PENALTY: string;
    LLM_CHAT_STOP_SEQUENCES: string;
    LLM_REQUEST_FUNCTIONS: string;
    VECTOR_DB_VENDOR: string;
    VECTOR_DB_QUERY_TOP_K: string;
    VECTOR_DB_TABLE_NAME: string;
    VECTOR_DB_ADD_COUNT: string;
    VECTOR_DB_DELETE_SELECTOR: string;
    VECTOR_DB_DELETE_COUNT: string;
    VECTOR_DB_GET_SELECTOR: string;
    VECTOR_DB_GET_COUNT: string;
    VECTOR_DB_GET_INCLUDE_METADATA: string;
    VECTOR_DB_GET_INCLUDE_VALUES: string;
    TRACELOOP_SPAN_KIND: string;
    TRACELOOP_WORKFLOW_NAME: string;
    TRACELOOP_ENTITY_NAME: string;
    TRACELOOP_ENTITY_PATH: string;
    TRACELOOP_ENTITY_VERSION: string;
    TRACELOOP_ASSOCIATION_PROPERTIES: string;
    TRACELOOP_ENTITY_INPUT: string;
    TRACELOOP_ENTITY_OUTPUT: string;
};
export declare const Events: {
    DB_QUERY_EMBEDDINGS: string;
    DB_QUERY_RESULT: string;
};
export declare const EventAttributes: {
    DB_QUERY_EMBEDDINGS_VECTOR: string;
    DB_QUERY_RESULT_ID: string;
    DB_QUERY_RESULT_SCORE: string;
    DB_QUERY_RESULT_DISTANCE: string;
    DB_QUERY_RESULT_METADATA: string;
    DB_QUERY_RESULT_VECTOR: string;
    DB_QUERY_RESULT_DOCUMENT: string;
    VECTOR_DB_QUERY_TOP_K: string;
    VECTOR_DB_QUERY_INCLUDE_VALUES: string;
    VECTOR_DB_QUERY_INCLUDE_METADATA: string;
    VECTOR_DB_QUERY_ID: string;
    VECTOR_DB_QUERY_EMBEDDINGS_VECTOR: string;
    VECTOR_DB_QUERY_METADATA_FILTER: string;
    VECTOR_DB_QUERY_RESULT_NAMESPACE: string;
    VECTOR_DB_QUERY_RESULT_READ_UNITS_CONSUMED: string;
    VECTOR_DB_QUERY_RESULT_MATCHES_LENGTH: string;
    VECTOR_DB_QUERY_RESULT_SCORE: string;
    VECTOR_DB_QUERY_RESULT_ID: string;
    VECTOR_DB_QUERY_RESULT_VALUES: string;
    VECTOR_DB_QUERY_RESULT_SPARSE_INDICES: string;
    VECTOR_DB_QUERY_RESULT_SPARSE_VALUES: string;
    VECTOR_DB_QUERY_RESULT_METADATA: string;
};
export declare enum LLMRequestTypeValues {
    COMPLETION = "completion",
    CHAT = "chat",
    RERANK = "rerank",
    UNKNOWN = "unknown"
}
export declare enum TraceloopSpanKindValues {
    WORKFLOW = "workflow",
    TASK = "task",
    AGENT = "agent",
    TOOL = "tool",
    UNKNOWN = "unknown"
}
//# sourceMappingURL=SemanticAttributes.d.ts.map